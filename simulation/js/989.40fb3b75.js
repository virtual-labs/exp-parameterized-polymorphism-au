"use strict";(self["webpackChunkexp_10"]=self["webpackChunkexp_10"]||[]).push([[989],{7989:function(t,n,e){e.r(n),e.d(n,{default:function(){return Jt}});e(7658);var o=e(3396),a=e(7139),s=e(9242);const i={class:"app"},l={class:"buttons"},r={id:"buttons",class:"relative"};function c(t,n,e,c,m,u){return(0,o.wg)(),(0,o.iD)(o.HY,null,[(0,o._)("main",i,[(0,o._)("div",l,[(0,o._)("button",{onClick:n[0]||(n[0]=t=>m.componentSelect="OneInstructionsComponent"),style:(0,a.j5)("OneInstructionsComponent"===m.componentSelect?"background-color: #55acee":"")},"1. Instructions ",4),(0,o._)("button",{onClick:n[1]||(n[1]=t=>m.componentSelect="OnePersonComponent"),style:(0,a.j5)("OnePersonComponent"===m.componentSelect?"background-color: #55acee":"")},"2. Person ",4),(0,o._)("button",{onClick:n[2]||(n[2]=t=>m.componentSelect="OneClerkComponent"),style:(0,a.j5)("OneClerkComponent"===m.componentSelect?"background-color: #55acee":"")},"3. Exec ",4),(0,o._)("button",{onClick:n[3]||(n[3]=t=>m.componentSelect="OneCustomerComponent"),style:(0,a.j5)("OneCustomerComponent"===m.componentSelect?"background-color: #55acee":"")},"4. Customer ",4),(0,o._)("button",{onClick:n[4]||(n[4]=t=>m.componentSelect="OneVehicleComponent"),style:(0,a.j5)("OneVehicleComponent"===m.componentSelect?"background-color: #55acee":"")},"5. Vehicle ",4),(0,o._)("button",{onClick:n[5]||(n[5]=t=>m.componentSelect="OneReservationComponent"),style:(0,a.j5)("OneReservationComponent"===m.componentSelect?"background-color: #55acee":"")},"6. Reservation ",4),(0,o._)("button",{onClick:n[6]||(n[6]=t=>m.componentSelect="OneRentalSystemComponent"),style:(0,a.j5)("OneRentalSystemComponent"===m.componentSelect?"background-color: #55acee":"")},"7. Rental System ",4),(0,o._)("button",{onClick:n[7]||(n[7]=t=>m.componentSelect="TwoTestDriverComponent"),style:(0,a.j5)("TwoTestDriverComponent"===m.componentSelect?"background-color: #55acee":"")},"8. Test Driver ",4),(0,o._)("button",{onClick:n[8]||(n[8]=t=>m.componentSelect="OneClassComponent"),style:(0,a.j5)("OneClassComponent"===m.componentSelect?"background-color: #55acee":"")},"9. Class Diagram ",4)]),((0,o.wg)(),(0,o.j4)(o.Ob,null,[((0,o.wg)(),(0,o.j4)((0,o.LL)(m.componentSelect),{onInstructionsRead:u.instructionsReadCallback,onTestDriver:u.testDriverCompleteCallback},null,40,["onInstructionsRead","onTestDriver"]))],1024))]),(0,o.wy)((0,o._)("footer",null,[(0,o._)("div",r,[(0,o._)("button",{class:"navitem",onClick:n[9]||(n[9]=n=>t.$router.push("/congratulations"))},"Next")])],512),[[s.F8,m.testDriverComplete]])],64)}var m=e(9761),u=e(5377),p=e(7179),b=e(749),y=e(7389),d=e(9683),h=e(6646),j=e(8781);const C=t=>((0,o.dD)("data-v-65be64ac"),t=t(),(0,o.Cn)(),t),S={class:"app"},x=C((()=>(0,o._)("div",{id:"snackbar"},"Some text some message..",-1))),w={id:"myModal"},f={class:"modal-content"},g=C((()=>(0,o._)("span",{class:"close"},"Ã—",-1))),E=(0,o.uE)('<div class="column" style="position:sticky;top:22%;left:65%;bottom:10%;float:right;" data-v-65be64ac><div class="column" data-v-65be64ac><div class="codebox" data-v-65be64ac><h5 data-v-65be64ac>Test Driver: </h5><ul style="line-height:125%;" data-v-65be64ac><li data-v-65be64ac>Write a TestDriver class that has a RentalSystem object.</li><li data-v-65be64ac>Create an ArrayList of type Person and populate it with objects of type Exec and Customer as mentioned in the comments. </li><li data-v-65be64ac>Create an ArrayList of type Customer pobj1 and populate it with objects of type Customer as mentioned in the comments.</li><li data-v-65be64ac>Create an ArrayList of type Exec pobj2 and populate it with objects of type Exec as mentioned.</li><li data-v-65be64ac>Print the count of Person, Customer and Exec objects who have email IDs and phones.</li><li data-v-65be64ac>Initialise the array with pobj[1], observe what happens, and type cast it to the correct type, understand the exception. </li><li data-v-65be64ac>Write try-catch blocks with appropriate exceptions to fix the errors.</li><li data-v-65be64ac>Create a Customer array cobj and populate it with objects of type Customer.</li><li data-v-65be64ac>Create a Vehicle array and populate it with a Vehicle object with regNum as 1234.</li><li data-v-65be64ac>Create a date object d, and use it to call the setBookingDate function, and set the contract status to &quot;Reservation not released&quot;</li><li data-v-65be64ac>Observe any errors that appear and write try-catch blocks to handle the same.</li><li data-v-65be64ac>Call the visitOffice method by passing the correct object as parameter.</li><li data-v-65be64ac>Write a generic function to calculate the count of Persons with email.</li><li data-v-65be64ac>Write a generic function to calculate the count of Persons with phone.</li><li data-v-65be64ac>Write a generic function to calculate the count of all Customers.</li><li data-v-65be64ac>Write a generic function to calculate the count of all Execs.</li><li data-v-65be64ac>Write a generic function to display the details of all Persons.</li></ul></div></div></div>',1),v={class:"row"},P={class:"column"},k={style:{display:"flex","flex-direction":"row"}},_=C((()=>(0,o._)("div",{style:{flex:"5"}},[(0,o._)("h1",{style:{padding:"25px","padding-bottom":"0px"}},"Understanding Exception Handling"),(0,o._)("p",{style:{padding:"25px","padding-top":"0px"}},"Follow the instructions to identify exceptions that arise during runtime and learn how to handle them.")],-1))),L={style:{flex:"1"}},A=C((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\t\t\n\t\t//step:1 create a person object and initialize with a customer and exec object\n\t\tArrayList<Person> pobj= new ArrayList<>();\n\t\tpobj.add(new Exec("EFG", "efg@gmail.com"));\n\t\tpobj.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj.add(new Customer("DEF", 8654678976L));\n\t\tpobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(pobj);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Customer> pobj1= new ArrayList<>();\n\t\tpobj1.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj1.add(new Customer("DEF", 8654678976L));\n\t\tpobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(pobj1);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Exec> pobj2= new ArrayList<>();\n\t\tpobj2.add(new Exec("ABC1", "abc1@gmail.com"));\n\t\tpobj2.add(new Exec("DEF1", 8654678976L));\n\t\tpobj2.add(new Exec("GHI1", "ghi1@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Exec: [");\n\t\tdisplayAll(pobj2);\n\t\tSystem.out.println("]");\n\t\t\n\t\tSystem.out.println("Count of persons with Email : " +countPersonWithEmail(pobj));\n\t\tSystem.out.println("Count of persons with Phone : " +countPersonWithPhone(pobj));\n\t\tSystem.out.println("Count of Customer with Email : " +countPersonWithEmail(pobj1));\n\t\tSystem.out.println("Count of Customer with Phone : " +countPersonWithPhone(pobj1));\n\t\tSystem.out.println("Count of Exec with Email : " +countPersonWithEmail(pobj2));\n\t\tSystem.out.println("Count of Exec with Phone : " +countPersonWithPhone(pobj2));\n\t\t\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj));\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj1));\n\t\t\n\t\t\n\t\tSystem.out.println("Count of Execs in the list : " +countExec(pobj));\n\t\t\n\t\tSystem.out.println("Count of Execs in the list : " +countExec(pobj2));\n    \n\t\trentalSystem.execobj=new Exec[1];\t\t\n\t\t\n   \t\ttry\n\t\t{\n\t\t\trentalSystem.execobj[0]=(Exec)pobj.get(1);\n\t\t}\n\t\tcatch(ClassCastException e)\n\t\t{\n\t\t\tif(pobj.get(1) instanceof Exec)\n\t\t\t\trentalSystem.execobj[0] =(Exec) pobj.get(1);\n\t\t}\n\t\t\n\t\t\n\t\trentalSystem.cobj= new Customer[3];\n\t\trentalSystem.cobj[0]=(Customer) pobj.get(1);\n\t\trentalSystem.cobj[1]=(Customer) pobj.get(2);\n\t\trentalSystem.cobj[2]=(Customer) pobj.get(3);\n\t\trentalSystem.cobj[0].setCity("Coimbatore");\n\t\trentalSystem.cobj[1].setCity("Coimbatore");\n\t\trentalSystem.cobj[2].setCity("Chennai");\n\t\t\n\t\trentalSystem.vobj = new Vehicle[1];\n\t\trentalSystem.vobj[0]=new Vehicle(1234);\n\t\t\n\t\trentalSystem.robj=new Reservation[1];\n\t\trentalSystem.robj[0]= new Reservation(rentalSystem.cobj[0],rentalSystem.vobj[0]);\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd");\n    Date d = sdformat.parse("2022-02-29");\n\t\trentalSystem.robj[0].setBookingDate(d);\n\t\trentalSystem.robj[0].setContractStatus("Reservation not released");\n\t\t\n\t\t\n\t\ttry\n\t\t{\n\t\t\trentalSystem.visitOffice(rentalSystem.robj[0]);\n\t\t}\n\t\tcatch(NullPointerException e)\n\t\t{\n\t\t\tSystem.out.println("wait for exec to be assigned");\n\t\t}\t\t\n\t}\t\n',-1))),D=C((()=>(0,o._)("br",null,null,-1))),T=C((()=>(0,o._)("br",null,null,-1))),W=C((()=>(0,o._)("br",null,null,-1))),U=C((()=>(0,o._)("p",{id:"comment"},"//A generic T must extend Person class passing that into an ArrayList 'alist' ",-1))),O=C((()=>(0,o._)("br",null,null,-1))),F=C((()=>(0,o._)("br",null,null,-1))),R=C((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\t\t\n\t\t//step:1 create a person object and initialize with a customer and exec object\n\t\tArrayList<Person> pobj= new ArrayList<>();\n\t\tpobj.add(new Exec("EFG", "efg@gmail.com"));\n\t\tpobj.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj.add(new Customer("DEF", 8654678976L));\n\t\tpobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(pobj);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Customer> pobj1= new ArrayList<>();\n\t\tpobj1.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj1.add(new Customer("DEF", 8654678976L));\n\t\tpobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(pobj1);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Exec> pobj2= new ArrayList<>();\n\t\tpobj2.add(new Exec("ABC1", "abc1@gmail.com"));\n\t\tpobj2.add(new Exec("DEF1", 8654678976L));\n\t\tpobj2.add(new Exec("GHI1", "ghi1@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Exec: [");\n\t\tdisplayAll(pobj2);\n\t\tSystem.out.println("]");\n\t\t\n\t\tSystem.out.println("Count of persons with Email : " +countPersonWithEmail(pobj));\n\t\tSystem.out.println("Count of persons with Phone : " +countPersonWithPhone(pobj));\n\t\tSystem.out.println("Count of Customer with Email : " +countPersonWithEmail(pobj1));\n\t\tSystem.out.println("Count of Customer with Phone : " +countPersonWithPhone(pobj1));\n\t\tSystem.out.println("Count of Exec with Email : " +countPersonWithEmail(pobj2));\n\t\tSystem.out.println("Count of Exec with Phone : " +countPersonWithPhone(pobj2));\n\t\t\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj));\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj1));\n\t\t\n\t\t\n\t\tSystem.out.println("Count of Execs in the list : " +countExec(pobj));\n\t\t\n\t\tSystem.out.println("Count of Execs in the list : " +countExec(pobj2));\n    \n\t\trentalSystem.execobj=new Exec[1];\t\t\n\t\t\n   \t\ttry\n\t\t{\n\t\t\trentalSystem.execobj[0]=(Exec)pobj.get(1);\n\t\t}\n\t\tcatch(ClassCastException e)\n\t\t{\n\t\t\tif(pobj.get(1) instanceof Exec)\n\t\t\t\trentalSystem.execobj[0] =(Exec) pobj.get(1);\n\t\t}\n\t\t\n\t\t\n\t\trentalSystem.cobj= new Customer[3];\n\t\trentalSystem.cobj[0]=(Customer) pobj.get(1);\n\t\trentalSystem.cobj[1]=(Customer) pobj.get(2);\n\t\trentalSystem.cobj[2]=(Customer) pobj.get(3);\n\t\trentalSystem.cobj[0].setCity("Coimbatore");\n\t\trentalSystem.cobj[1].setCity("Coimbatore");\n\t\trentalSystem.cobj[2].setCity("Chennai");\n\t\t\n\t\trentalSystem.vobj = new Vehicle[1];\n\t\trentalSystem.vobj[0]=new Vehicle(1234);\n\t\t\n\t\trentalSystem.robj=new Reservation[1];\n\t\trentalSystem.robj[0]= new Reservation(rentalSystem.cobj[0],rentalSystem.vobj[0]);\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd");\n    \tDate d = sdformat.parse("2022-02-29");\n\t\trentalSystem.robj[0].setBookingDate(d);\n\t\trentalSystem.robj[0].setContractStatus("Reservation not released");\n\t\t\n\t\t\n\t\ttry\n\t\t{\n\t\t\trentalSystem.visitOffice(rentalSystem.robj[0]);\n\t\t}\n\t\tcatch(NullPointerException e)\n\t\t{\n\t\t\tSystem.out.println("wait for exec to be assigned");\n\t\t}\t\t\n\t}\t\n\n  public static <T extends Person> int countPersonWithEmail(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n',-1))),V=C((()=>(0,o._)("br",null,null,-1))),I=C((()=>(0,o._)("br",null,null,-1))),B=C((()=>(0,o._)("br",null,null,-1))),G=C((()=>(0,o._)("br",null,null,-1))),H=C((()=>(0,o._)("br",null,null,-1))),N=C((()=>(0,o._)("br",null,null,-1))),M=C((()=>(0,o._)("p",{id:"comment"},"//Fill the right loop and conditional statement such that when 'a' has no email the count increments. ",-1))),z=C((()=>(0,o._)("br",null,null,-1))),Z=C((()=>(0,o._)("br",null,null,-1))),q=C((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\t\t\n\t\t//step:1 create a person object and initialize with a customer and exec object\n\t\tArrayList<Person> pobj= new ArrayList<>();\n\t\tpobj.add(new Exec("EFG", "efg@gmail.com"));\n\t\tpobj.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj.add(new Customer("DEF", 8654678976L));\n\t\tpobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(pobj);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Customer> pobj1= new ArrayList<>();\n\t\tpobj1.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj1.add(new Customer("DEF", 8654678976L));\n\t\tpobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(pobj1);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Exec> pobj2= new ArrayList<>();\n\t\tpobj2.add(new Exec("ABC1", "abc1@gmail.com"));\n\t\tpobj2.add(new Exec("DEF1", 8654678976L));\n\t\tpobj2.add(new Exec("GHI1", "ghi1@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Exec: [");\n\t\tdisplayAll(pobj2);\n\t\tSystem.out.println("]");\n\t\t\n\t\tSystem.out.println("Count of persons with Email : " +countPersonWithEmail(pobj));\n\t\tSystem.out.println("Count of persons with Phone : " +countPersonWithPhone(pobj));\n\t\tSystem.out.println("Count of Customer with Email : " +countPersonWithEmail(pobj1));\n\t\tSystem.out.println("Count of Customer with Phone : " +countPersonWithPhone(pobj1));\n\t\tSystem.out.println("Count of Exec with Email : " +countPersonWithEmail(pobj2));\n\t\tSystem.out.println("Count of Exec with Phone : " +countPersonWithPhone(pobj2));\n\t\t\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj));\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj1));\n\t\t\n\t\t\n\t\tSystem.out.println("Count of Execs in the list : " +countExec(pobj));\n\t\t\n\t\tSystem.out.println("Count of Execs in the list : " +countExec(pobj2));\n    \n\t\trentalSystem.execobj=new Exec[1];\t\t\n\t\t\n   \t\ttry\n\t\t{\n\t\t\trentalSystem.execobj[0]=(Exec)pobj.get(1);\n\t\t}\n\t\tcatch(ClassCastException e)\n\t\t{\n\t\t\tif(pobj.get(1) instanceof Exec)\n\t\t\t\trentalSystem.execobj[0] =(Exec) pobj.get(1);\n\t\t}\n\t\t\n\t\t\n\t\trentalSystem.cobj= new Customer[3];\n\t\trentalSystem.cobj[0]=(Customer) pobj.get(1);\n\t\trentalSystem.cobj[1]=(Customer) pobj.get(2);\n\t\trentalSystem.cobj[2]=(Customer) pobj.get(3);\n\t\trentalSystem.cobj[0].setCity("Coimbatore");\n\t\trentalSystem.cobj[1].setCity("Coimbatore");\n\t\trentalSystem.cobj[2].setCity("Chennai");\n\t\t\n\t\trentalSystem.vobj = new Vehicle[1];\n\t\trentalSystem.vobj[0]=new Vehicle(1234);\n\t\t\n\t\trentalSystem.robj=new Reservation[1];\n\t\trentalSystem.robj[0]= new Reservation(rentalSystem.cobj[0],rentalSystem.vobj[0]);\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd");\n   \t\tDate d = sdformat.parse("2022-02-29");\n\t\trentalSystem.robj[0].setBookingDate(d);\n\t\trentalSystem.robj[0].setContractStatus("Reservation not released");\n\t\t\n\t\t\n\t\ttry\n\t\t{\n\t\t\trentalSystem.visitOffice(rentalSystem.robj[0]);\n\t\t}\n\t\tcatch(NullPointerException e)\n\t\t{\n\t\t\tSystem.out.println("wait for exec to be assigned");\n\t\t}\t\t\n\t}\t\n\n\tpublic static <T extends Person> int countPersonWithEmail(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n\t\tfor(T a: alist)\n\t\t{\n\t\t\tif(a.getEmail()!=null)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\n',-1))),$=C((()=>(0,o._)("br",null,null,-1))),K=C((()=>(0,o._)("br",null,null,-1))),Y=C((()=>(0,o._)("br",null,null,-1))),J=C((()=>(0,o._)("p",{id:"comment"},"//A generic T must extend Person class passing that into an ArrayList 'alist' ",-1))),Q=C((()=>(0,o._)("br",null,null,-1))),X=C((()=>(0,o._)("br",null,null,-1))),tt=C((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\t\t\n\t\t//step:1 create a person object and initialize with a customer and exec object\n\t\tArrayList<Person> pobj= new ArrayList<>();\n\t\tpobj.add(new Exec("EFG", "efg@gmail.com"));\n\t\tpobj.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj.add(new Customer("DEF", 8654678976L));\n\t\tpobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(pobj);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Customer> pobj1= new ArrayList<>();\n\t\tpobj1.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj1.add(new Customer("DEF", 8654678976L));\n\t\tpobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(pobj1);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Exec> pobj2= new ArrayList<>();\n\t\tpobj2.add(new Exec("ABC1", "abc1@gmail.com"));\n\t\tpobj2.add(new Exec("DEF1", 8654678976L));\n\t\tpobj2.add(new Exec("GHI1", "ghi1@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Exec: [");\n\t\tdisplayAll(pobj2);\n\t\tSystem.out.println("]");\n\t\t\n\t\tSystem.out.println("Count of persons with Email : " +countPersonWithEmail(pobj));\n\t\tSystem.out.println("Count of persons with Phone : " +countPersonWithPhone(pobj));\n\t\tSystem.out.println("Count of Customer with Email : " +countPersonWithEmail(pobj1));\n\t\tSystem.out.println("Count of Customer with Phone : " +countPersonWithPhone(pobj1));\n\t\tSystem.out.println("Count of Exec with Email : " +countPersonWithEmail(pobj2));\n\t\tSystem.out.println("Count of Exec with Phone : " +countPersonWithPhone(pobj2));\n\t\t\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj));\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj1));\n\t\t\n\t\t\n\t\tSystem.out.println("Count of Execs in the list : " +countExec(pobj));\n\t\t\n\t\tSystem.out.println("Count of Execs in the list : " +countExec(pobj2));\n    \n\t\trentalSystem.execobj=new Exec[1];\t\t\n\t\t\n    \ttry\n\t\t{\n\t\t\trentalSystem.execobj[0]=(Exec)pobj.get(1);\n\t\t}\n\t\tcatch(ClassCastException e)\n\t\t{\n\t\t\tif(pobj.get(1) instanceof Exec)\n\t\t\t\trentalSystem.execobj[0] =(Exec) pobj.get(1);\n\t\t}\n\t\t\n\t\t\n\t\trentalSystem.cobj= new Customer[3];\n\t\trentalSystem.cobj[0]=(Customer) pobj.get(1);\n\t\trentalSystem.cobj[1]=(Customer) pobj.get(2);\n\t\trentalSystem.cobj[2]=(Customer) pobj.get(3);\n\t\trentalSystem.cobj[0].setCity("Coimbatore");\n\t\trentalSystem.cobj[1].setCity("Coimbatore");\n\t\trentalSystem.cobj[2].setCity("Chennai");\n\t\t\n\t\trentalSystem.vobj = new Vehicle[1];\n\t\trentalSystem.vobj[0]=new Vehicle(1234);\n\t\t\n\t\trentalSystem.robj=new Reservation[1];\n\t\trentalSystem.robj[0]= new Reservation(rentalSystem.cobj[0],rentalSystem.vobj[0]);\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd");\n   \t\tDate d = sdformat.parse("2022-02-29");\n\t\trentalSystem.robj[0].setBookingDate(d);\n\t\trentalSystem.robj[0].setContractStatus("Reservation not released");\n\t\t\n\t\t\n\t\ttry\n\t\t{\n\t\t\trentalSystem.visitOffice(rentalSystem.robj[0]);\n\t\t}\n\t\tcatch(NullPointerException e)\n\t\t{\n\t\t\tSystem.out.println("wait for exec to be assigned");\n\t\t}\t\t\n\t}\t\n\n\tpublic static <T extends Person> int countPersonWithEmail(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n\t\tfor(T a: alist)\n\t\t{\n\t\t\tif(a.getEmail()!=null)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\n\tpublic static <T extends Person> int countPersonWithPhone(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n\t\tfor(T a: alist)\n\t\t{\t\n\n',-1))),nt=C((()=>(0,o._)("br",null,null,-1))),et=C((()=>(0,o._)("br",null,null,-1))),ot=C((()=>(0,o._)("br",null,null,-1))),at=C((()=>(0,o._)("br",null,null,-1))),st=C((()=>(0,o._)("br",null,null,-1))),it=C((()=>(0,o._)("p",{id:"comment"},"//get the phone of 'a' for comparision ",-1))),lt=C((()=>(0,o._)("br",null,null,-1))),rt=C((()=>(0,o._)("br",null,null,-1))),ct=C((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\t\t\n\t\t//step:1 create a person object and initialize with a customer and exec object\n\t\tArrayList<Person> pobj= new ArrayList<>();\n\t\tpobj.add(new Exec("EFG", "efg@gmail.com"));\n\t\tpobj.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj.add(new Customer("DEF", 8654678976L));\n\t\tpobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(pobj);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Customer> pobj1= new ArrayList<>();\n\t\tpobj1.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj1.add(new Customer("DEF", 8654678976L));\n\t\tpobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(pobj1);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Exec> pobj2= new ArrayList<>();\n\t\tpobj2.add(new Exec("ABC1", "abc1@gmail.com"));\n\t\tpobj2.add(new Exec("DEF1", 8654678976L));\n\t\tpobj2.add(new Exec("GHI1", "ghi1@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Exec: [");\n\t\tdisplayAll(pobj2);\n\t\tSystem.out.println("]");\n\t\t\n\t\tSystem.out.println("Count of persons with Email : " +countPersonWithEmail(pobj));\n\t\tSystem.out.println("Count of persons with Phone : " +countPersonWithPhone(pobj));\n\t\tSystem.out.println("Count of Customer with Email : " +countPersonWithEmail(pobj1));\n\t\tSystem.out.println("Count of Customer with Phone : " +countPersonWithPhone(pobj1));\n\t\tSystem.out.println("Count of Exec with Email : " +countPersonWithEmail(pobj2));\n\t\tSystem.out.println("Count of Exec with Phone : " +countPersonWithPhone(pobj2));\n\t\t\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj));\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj1));\n\t\t\n\t\t\n\t\tSystem.out.println("Count of Execs in the list : " +countExec(pobj));\n\t\t\n\t\tSystem.out.println("Count of Execs in the list : " +countExec(pobj2));\n    \n\t\trentalSystem.execobj=new Exec[1];\t\t\n\t\t\n    \ttry\n\t\t{\n\t\t\trentalSystem.execobj[0]=(Exec)pobj.get(1);\n\t\t}\n\t\tcatch(ClassCastException e)\n\t\t{\n\t\t\tif(pobj.get(1) instanceof Exec)\n\t\t\t\trentalSystem.execobj[0] =(Exec) pobj.get(1);\n\t\t}\n\t\t\n\t\t\n\t\trentalSystem.cobj= new Customer[3];\n\t\trentalSystem.cobj[0]=(Customer) pobj.get(1);\n\t\trentalSystem.cobj[1]=(Customer) pobj.get(2);\n\t\trentalSystem.cobj[2]=(Customer) pobj.get(3);\n\t\trentalSystem.cobj[0].setCity("Coimbatore");\n\t\trentalSystem.cobj[1].setCity("Coimbatore");\n\t\trentalSystem.cobj[2].setCity("Chennai");\n\t\t\n\t\trentalSystem.vobj = new Vehicle[1];\n\t\trentalSystem.vobj[0]=new Vehicle(1234);\n\t\t\n\t\trentalSystem.robj=new Reservation[1];\n\t\trentalSystem.robj[0]= new Reservation(rentalSystem.cobj[0],rentalSystem.vobj[0]);\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd");\n    \tDate d = sdformat.parse("2022-02-29");\n\t\trentalSystem.robj[0].setBookingDate(d);\n\t\trentalSystem.robj[0].setContractStatus("Reservation not released");\n\t\t\n\t\t\n\t\ttry\n\t\t{\n\t\t\trentalSystem.visitOffice(rentalSystem.robj[0]);\n\t\t}\n\t\tcatch(NullPointerException e)\n\t\t{\n\t\t\tSystem.out.println("wait for exec to be assigned");\n\t\t}\t\t\n\t}\t\n\n\tpublic static <T extends Person> int countPersonWithEmail(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n\t\tfor(T a: alist)\n\t\t{\n\t\t\tif(a.getEmail()!=null)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\n\tpublic static <T extends Person> int countPersonWithPhone(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n\t\tfor(T a: alist)\n\t\t{\n\t\t\tif(a.getPhone()!=0L && a.getPhone()!=999999999L)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static int countCustomer(ArrayList<? super Customer> alist)\n\t{\n\t\tint count=0;\n\t\tfor(Object a: alist)\n\t\t{\n\n',-1))),mt=C((()=>(0,o._)("br",null,null,-1))),ut=C((()=>(0,o._)("br",null,null,-1))),pt=C((()=>(0,o._)("br",null,null,-1))),bt=C((()=>(0,o._)("br",null,null,-1))),yt=C((()=>(0,o._)("br",null,null,-1))),dt=C((()=>(0,o._)("br",null,null,-1))),ht=C((()=>(0,o._)("br",null,null,-1))),jt=C((()=>(0,o._)("br",null,null,-1))),Ct=C((()=>(0,o._)("br",null,null,-1))),St=C((()=>(0,o._)("p",{id:"comment"},"//1. Write the correct keyword to refer to parent. 2.Fill the right keyword for 'a' 3. Count increments if 'a' is an instance of Customer ",-1))),xt=C((()=>(0,o._)("br",null,null,-1))),wt=C((()=>(0,o._)("br",null,null,-1))),ft=C((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\t\t\n\t\t//step:1 create a person object and initialize with a customer and exec object\n\t\tArrayList<Person> pobj= new ArrayList<>();\n\t\tpobj.add(new Exec("EFG", "efg@gmail.com"));\n\t\tpobj.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj.add(new Customer("DEF", 8654678976L));\n\t\tpobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(pobj);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Customer> pobj1= new ArrayList<>();\n\t\tpobj1.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj1.add(new Customer("DEF", 8654678976L));\n\t\tpobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(pobj1);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Exec> pobj2= new ArrayList<>();\n\t\tpobj2.add(new Exec("ABC1", "abc1@gmail.com"));\n\t\tpobj2.add(new Exec("DEF1", 8654678976L));\n\t\tpobj2.add(new Exec("GHI1", "ghi1@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Exec: [");\n\t\tdisplayAll(pobj2);\n\t\tSystem.out.println("]");\n\t\t\n\t\tSystem.out.println("Count of persons with Email : " +countPersonWithEmail(pobj));\n\t\tSystem.out.println("Count of persons with Phone : " +countPersonWithPhone(pobj));\n\t\tSystem.out.println("Count of Customer with Email : " +countPersonWithEmail(pobj1));\n\t\tSystem.out.println("Count of Customer with Phone : " +countPersonWithPhone(pobj1));\n\t\tSystem.out.println("Count of Exec with Email : " +countPersonWithEmail(pobj2));\n\t\tSystem.out.println("Count of Exec with Phone : " +countPersonWithPhone(pobj2));\n\t\t\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj));\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj1));\n\t\t//System.out.println("Count of Customers in the list : " +countCustomer(pobj2));//compiler error\n\t\t\n\t\tSystem.out.println("Count of Execs in the list : " +countExec(pobj));\n\t\t//System.out.println("Count of Execs in the list : " +countExec(pobj1)); //compiler error\n\t\tSystem.out.println("Count of Execs in the list : " +countExec(pobj2));\n\t\t\n\t\trentalSystem.execobj=new Exec[1];\t\t\n\t\t//step 2: initialize the exec object with pobj[0] and check\n\t\t//rentalSystem.execobj[0]=pobj.get(0); //compiler error due to type mismatch\n\t\t//step 3: type cast\n\t\t//rentalSystem.execobj[0]=(Exec)pobj.get(0); //no compiler error or runtime error\n\t\t\n\t\t//run the code and check to see the output\n\t\t//Vehicle is available, initiating contract..\n\t\t//Reservation released\n\t\t//Vehicle key handedover\n\t\t\n\t\t//step 4: initialize the exec object with pobj[1] and check\n\t\t//rentalSystem.execobj[0]=pobj.get(1); //compiler error due to type mismatch\n\t\t//step 5: type cast to Exec\n\t\t//rentalSystem.execobj[0]=(Exec)pobj.get(1); //no compiler error\n\t\t\n\t\t//run the code and check \n\t\t//the following runtime error appears\n\t\t//Exception in thread "main" java.lang.ClassCastException: \n    \t//class Customer cannot be cast to class Exec (Customer and Exec are in unnamed module of loader \'app\')\n\t\t//at TestDriver.main(TestDriver.java:23)\n\t\t\n\t\t//Step 6: resolve using try-catch block and instanceof method\t\n\t\ttry\n\t\t{\n\t\t\trentalSystem.execobj[0]=(Exec)pobj.get(1);\n\t\t}\n\t\tcatch(ClassCastException e)\n\t\t{\n\t\t\tif(pobj.get(1) instanceof Exec)\n\t\t\t\trentalSystem.execobj[0] =(Exec) pobj.get(1);\n\t\t}\n\t\t\n\t\t\n\t\trentalSystem.cobj= new Customer[3];\n\t\trentalSystem.cobj[0]=(Customer) pobj.get(1);\n\t\trentalSystem.cobj[1]=(Customer) pobj.get(2);\n\t\trentalSystem.cobj[2]=(Customer) pobj.get(3);\n\t\trentalSystem.cobj[0].setCity("Coimbatore");\n\t\trentalSystem.cobj[1].setCity("Coimbatore");\n\t\trentalSystem.cobj[2].setCity("Chennai");\n\t\t\n\t\trentalSystem.vobj = new Vehicle[1];\n\t\trentalSystem.vobj[0]=new Vehicle(1234);\n\t\t\n\t\trentalSystem.robj=new Reservation[1];\n\t\trentalSystem.robj[0]= new Reservation(rentalSystem.cobj[0],rentalSystem.vobj[0]);\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd");\n    \tDate d = sdformat.parse("2022-02-29");\n\t\trentalSystem.robj[0].setBookingDate(d);\n\t\trentalSystem.robj[0].setContractStatus("Reservation not released");\n\t\t\n\t\t//run this code and check the following error appears\n\t\t//Exception in thread "main" java.lang.NullPointerException: \n    \t//Cannot invoke "Exec.requestVehicle(Reservation)" because "cl" is null\n\t\t//at RentalSystem.visitOffice(RentalSystem.java:18)\n\t\t//at TestDriver.main(TestDriver.java:62)\n\t\t\n\t\t//Step 7: resolve using a try-catch block to handle the NullPointerException\n\t\ttry\n\t\t{\n\t\t\trentalSystem.visitOffice(rentalSystem.robj[0]);\n\t\t}\n\t\tcatch(NullPointerException e)\n\t\t{\n\t\t\tSystem.out.println("wait for exec to be assigned");\n\t\t}\t\t\n\t}\t\n\t\n\tpublic static <T extends Person> int countPersonWithEmail(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n\t\tfor(T a: alist)\n\t\t{\n\t\t\tif(a.getEmail()!=null)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static <T extends Person> int countPersonWithPhone(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n\t\tfor(T a: alist)\n\t\t{\n\t\t\tif(a.getPhone()!=0L && a.getPhone()!=999999999L)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static int countCustomer(ArrayList<? super Customer> alist)\n\t{\n\t\tint count=0;\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tif(a instanceof Customer)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static int countExec(ArrayList<? super Exec> alist)\n\t{\n\t\tint count=0;\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tif(a instanceof Exec)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static <T extends Person> void displayAll(ArrayList<T> alist)\n\t{\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tSystem.out.println(a.toString());\n\t\t}\n\t}\t\t\n}\n\n',-1))),gt=[ft];function Et(t,n,e,i,l,r){return(0,o.wg)(),(0,o.iD)("main",S,[x,(0,o._)("div",w,[(0,o._)("div",f,[g,((0,o.wg)(),(0,o.j4)((0,o.LL)(l.currentComponent)))])]),E,(0,o._)("div",v,[(0,o._)("div",P,[(0,o._)("div",k,[_,(0,o._)("div",L,[(0,o._)("button",{style:(0,a.j5)([{float:"right",width:"80px","margin-bottom":"30px"},{display:l.display[0]}]),onClick:n[0]||(n[0]=t=>r.popup("extendsComponent")),class:"button-30"},"Help",4),(0,o._)("button",{style:(0,a.j5)([{float:"right",width:"80px","margin-bottom":"30px"},{display:l.display[2]}]),onClick:n[1]||(n[1]=t=>r.popup("extendsComponent")),class:"button-30"},"Help",4)])]),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,a.j5)({display:l.display[0]})},[A,D,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒ public static <T "),(0,o.wy)((0,o._)("input",{spellcheck:"false",maxlength:"7","onUpdate:modelValue":n[2]||(n[2]=n=>t.seventeen=n),style:{width:"80px"}},null,512),[[s.nr,t.seventeen]]),(0,o.Uk)("Person> int countPersonWithEmail("),(0,o.wy)((0,o._)("input",{spellcheck:"false",maxlength:"9","onUpdate:modelValue":n[3]||(n[3]=n=>t.eighteen=n),style:{width:"90px"}},null,512),[[s.nr,t.eighteen]]),(0,o.Uk)("< "),(0,o.wy)((0,o._)("input",{spellcheck:"false",maxlength:"1","onUpdate:modelValue":n[4]||(n[4]=n=>t.nineteen=n),style:{width:"30px"}},null,512),[[s.nr,t.nineteen]]),(0,o.Uk)(" > alist) "),T,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒ{ "),W,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒ} "),U,O,(0,o.Uk)(" } "),F,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[5]||(n[5]=t=>r.validate_ten())},(0,a.zw)(l.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,a.j5)({display:l.display[1]})},[R,V,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒ "),(0,o.wy)((0,o._)("input",{spellcheck:"false",maxlength:"14","onUpdate:modelValue":n[6]||(n[6]=n=>t.twenty=n),style:{width:"105px"}},null,512),[[s.nr,t.twenty]]),I,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒ{ "),B,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒ "),(0,o.wy)((0,o._)("input",{spellcheck:"false",maxlength:"22","onUpdate:modelValue":n[7]||(n[7]=n=>t.twenty_one=n),style:{width:"150px"}},null,512),[[s.nr,t.twenty_one]]),G,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒcount++; "),H,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒ} "),N,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒreturn count; "),M,z,(0,o.Uk)(" } "),Z,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[8]||(n[8]=t=>r.validate_eleven())},(0,a.zw)(l.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,a.j5)({display:l.display[2]})},[q,$,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒ public static <T "),(0,o.wy)((0,o._)("input",{spellcheck:"false",maxlength:"7","onUpdate:modelValue":n[9]||(n[9]=n=>t.ttwo=n),style:{width:"80px"}},null,512),[[s.nr,t.ttwo]]),(0,o.Uk)("Person> int countPersonWithPhone("),(0,o.wy)((0,o._)("input",{spellcheck:"false",maxlength:"9","onUpdate:modelValue":n[10]||(n[10]=n=>t.tthree=n),style:{width:"90px"}},null,512),[[s.nr,t.tthree]]),(0,o.Uk)("< "),(0,o.wy)((0,o._)("input",{spellcheck:"false",maxlength:"1","onUpdate:modelValue":n[11]||(n[11]=n=>t.tfour=n),style:{width:"30px"}},null,512),[[s.nr,t.tfour]]),(0,o.Uk)(" > alist) "),K,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒ{ "),Y,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒ} "),J,Q,(0,o.Uk)(" } "),X,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[12]||(n[12]=t=>r.validate_twelve())},(0,a.zw)(l.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,a.j5)({display:l.display[3]})},[tt,nt,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒ if("),(0,o.wy)((0,o._)("input",{spellcheck:"false",maxlength:"12","onUpdate:modelValue":n[13]||(n[13]=n=>t.tfive=n),style:{width:"105px"}},null,512),[[s.nr,t.tfive]]),(0,o.Uk)("!=0L && "),(0,o.wy)((0,o._)("input",{spellcheck:"false",maxlength:"12","onUpdate:modelValue":n[14]||(n[14]=n=>t.tsix=n),style:{width:"105px"}},null,512),[[s.nr,t.tsix]]),(0,o.Uk)("!=0999999999L) "),et,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒ{ "),ot,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒcount++; "),at,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒ} "),st,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒreturn count; "),it,lt,(0,o.Uk)(" } "),rt,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[15]||(n[15]=t=>r.validate_thirteen())},(0,a.zw)(l.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,a.j5)({display:l.display[4]})},[ct,mt,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒ public static int countCustomer(ArrayList<?"),(0,o.wy)((0,o._)("input",{spellcheck:"false",maxlength:"5","onUpdate:modelValue":n[16]||(n[16]=n=>t.tseven=n),style:{width:"45px"}},null,512),[[s.nr,t.tseven]]),(0,o.Uk)(" Customer> alist) "),ut,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒ{ "),pt,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒint count=0; "),bt,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒ for("),(0,o.wy)((0,o._)("input",{spellcheck:"false",maxlength:"6","onUpdate:modelValue":n[17]||(n[17]=n=>t.teight=n),style:{width:"55px"}},null,512),[[s.nr,t.teight]]),(0,o.Uk)(" a: alist) "),yt,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒ{ "),dt,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒif(a "),(0,o.wy)((0,o._)("input",{spellcheck:"false",maxlength:"11","onUpdate:modelValue":n[18]||(n[18]=n=>t.tnine=n),style:{width:"85px"}},null,512),[[s.nr,t.tnine]]),(0,o.Uk)(" Customer) "),ht,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒcount++; "),jt,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒ} "),Ct,(0,o.Uk)("â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒreturn count; "),St,xt,(0,o.Uk)(" } "),wt,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[19]||(n[19]=t=>r.validate_fourteen())},(0,a.zw)(l.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,a.j5)({display:l.display[5]})},gt,4)])])])}var vt=e(7756),Pt=e(3255),kt=e(3221),_t=e(8028),Lt=e(3073),At=e(6277),Dt=e(6376),Tt=e(336),Wt=e(2645),Ut=e(5401),Ot=e(4880),Ft=e(4335),Rt=e(6171),Vt=e(7440),It=e(7836),Bt=e(6596),Gt=e(6945),Ht=e(7971),Nt=e(5358),Mt=e(7063),zt={components:{abstractComponent:vt["default"],arrayListComponent:Pt["default"],classCastExceptionComponent:kt["default"],constructorWritingComponent:_t["default"],dateComponent:Lt["default"],extendsComponent:At["default"],functionCallingWithObjectComponent:Dt["default"],getterComponent:Tt["default"],interfaceComponent:Wt["default"],newVariableComponent:Ut["default"],nullPointerExceptionComponent:Ot["default"],objectCreationComponent:Ft["default"],parseExceptionComponent:Rt["default"],passingArgumentsToFunctionsComponent:Vt["default"],printFunctionComponent:It["default"],setterComponent:Bt["default"],stringCompareComponent:Gt["default"],superKeywordComponent:Ht["default"],thisComponent:Nt["default"],tryCatchComponent:Mt["default"]},methods:{popup(t){this.currentComponent=t,console.log("popup");var n=document.getElementById("myModal");console.log(n);var e=document.getElementsByClassName("close")[0];n.style.display="block",console.log(n.style.display),e.onclick=function(){n.style.display="none"},window.onclick=function(t){t.target==n&&(n.style.display="none")}},correct1(){var t=document.getElementById("snackbar");t.innerHTML="Correct",t.style.backgroundColor="green",t.className="show",setTimeout((function(){t.className=t.className.replace("show","")}),3e3)},incorrect(){var t=document.getElementById("snackbar");t.innerHTML="Incorrect. Try again",t.style.backgroundColor="red",t.className="show",setTimeout((function(){t.className=t.className.replace("show","")}),3e3)},validate_ten(){"extends"==this.seventeen&&"ArrayList"==this.eighteen&&"T"==this.nineteen?(this.correct1(),this.display[0]="none",this.display[1]="block"):this.incorrect()},validate_eleven(){"for(T a:alist)"==this.twenty&&"if(a.getEmail()!=null)"==this.twenty_one?(this.correct1(),this.display[1]="none",this.display[2]="block"):this.incorrect()},validate_twelve(){"extends"==this.ttwo&&"ArrayList"==this.tthree&&"T"==this.tfour?(this.correct1(),this.display[2]="none",this.display[3]="block"):this.incorrect()},validate_thirteen(){"a.getPhone()"==this.tfive&&"a.getPhone()"==this.tsix?(this.correct1(),this.display[3]="none",this.display[4]="block"):this.incorrect()},validate_fourteen(){"super"==this.tseven&&"Object"==this.teight&&"instanceof"==this.tnine?(this.correct1(),this.display[4]="none",this.display[5]="block",this.$emit("testDriver",!0)):this.incorrect()}},data(){return{id:"container",class:"wrapper",currentComponent:"constructorWritingComponent",button_value:"Next",button_text:"Incorrect. Try again",button_text_right:"Correct. Next",correct:!1,valid:[!1,!1,!1,!1,!1,!1,!1],display:["block","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none"]}}},Zt=e(89);const qt=(0,Zt.Z)(zt,[["render",Et],["__scopeId","data-v-65be64ac"]]);var $t=qt,Kt={components:{OneClerkComponent:m.Z,OneClassComponent:u.Z,OneCustomerComponent:p.Z,OnePersonComponent:y.Z,OneReservationComponent:b.Z,OneVehicleComponent:d.Z,OneRentalSystemComponent:h.Z,OneInstructionsComponent:j.Z,TwoTestDriverComponent:$t},data(){return{componentSelect:"OneInstructionsComponent",testDriverComplete:!1}},methods:{instructionsReadCallback(t){console.log(t),this.componentSelect="TwoTestDriverComponent"},testDriverCompleteCallback(t){this.testDriverComplete=!0,this.componentSelect="OneClassComponent"}}};const Yt=(0,Zt.Z)(Kt,[["render",c]]);var Jt=Yt}}]);
//# sourceMappingURL=989.40fb3b75.js.map