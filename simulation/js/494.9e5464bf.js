"use strict";(self["webpackChunkexp_10"]=self["webpackChunkexp_10"]||[]).push([[494],{2494:function(t,n,e){e.r(n),e.d(n,{default:function(){return Kn}});e(7658);var o=e(3396),i=e(7139),s=e(9242);const r={class:"app"},a={class:"buttons"},l=["disabled"],c=["disabled"],u=["disabled"],m={id:"buttons",class:"relative"};function p(t,n,e,p,d,b){return(0,o.wg)(),(0,o.iD)(o.HY,null,[(0,o._)("main",r,[(0,o._)("div",a,[(0,o._)("button",{onClick:n[0]||(n[0]=t=>d.componentSelect="OneInstructionsComponent"),style:(0,i.j5)("OneInstructionsComponent"===d.componentSelect?"background-color: #55acee":"")},"1. Instructions ",4),(0,o._)("button",{onClick:n[1]||(n[1]=t=>d.componentSelect="ThreeTestDriverComponent"),style:(0,i.j5)("ThreeTestDriverComponent"===d.componentSelect?"background-color: #55acee":"")},"2. Test Driver ",4),(0,o._)("button",{onClick:n[2]||(n[2]=t=>d.componentSelect="ThreePersonComponent"),disabled:!d.testDriveComplete,style:(0,i.j5)("ThreePersonComponent"===d.componentSelect?"background-color: #55acee":"")},"3. Person ",12,l),(0,o._)("button",{onClick:n[3]||(n[3]=t=>d.componentSelect="ThreeCustomerComponent"),disabled:!d.personComplete,style:(0,i.j5)("ThreeCustomerComponent"===d.componentSelect?"background-color: #55acee":"")},"4. Customer ",12,c),(0,o._)("button",{onClick:n[4]||(n[4]=t=>d.componentSelect="ThreeClerkComponent"),disabled:!d.customerComplete,style:(0,i.j5)("ThreeClerkComponent"===d.componentSelect?"background-color: #55acee":"")},"5. Exec ",12,u),(0,o._)("button",{onClick:n[5]||(n[5]=t=>d.componentSelect="OneVehicleComponent"),style:(0,i.j5)("OneVehicleComponent"===d.componentSelect?"background-color: #55acee":"")},"6. Vehicle ",4),(0,o._)("button",{onClick:n[6]||(n[6]=t=>d.componentSelect="OneReservationComponent"),style:(0,i.j5)("OneReservationComponent"===d.componentSelect?"background-color: #55acee":"")},"7. Reservation ",4),(0,o._)("button",{onClick:n[7]||(n[7]=t=>d.componentSelect="OneRentalSystemComponent"),style:(0,i.j5)("OneRentalSystemComponent"===d.componentSelect?"background-color: #55acee":"")},"8. Rental System ",4),(0,o._)("button",{onClick:n[8]||(n[8]=t=>d.componentSelect="OneClassComponent"),style:(0,i.j5)("OneClassComponent"===d.componentSelect?"background-color: #55acee":"")},"9. Class Diagram ",4)]),((0,o.wg)(),(0,o.j4)(o.Ob,null,[((0,o.wg)(),(0,o.j4)((0,o.LL)(d.componentSelect),{onInstructionsRead:n[9]||(n[9]=t=>d.componentSelect="ThreeTestDriverComponent"),onTestDriverComplete:b.testDriveCompleteFunc,onPersonComplete:b.personCompleteFunc,onCustomerComplete:b.customerCompleteFunc,onExecComplete:b.execCompleteFunc},null,40,["onTestDriverComplete","onPersonComplete","onCustomerComplete","onExecComplete"]))],1024))]),(0,o.wy)((0,o._)("footer",null,[(0,o._)("div",m,[(0,o._)("button",{class:"navitem",onClick:n[10]||(n[10]=n=>t.$router.push("/congratulations"))},"Next")])],512),[[s.F8,d.testDriveComplete&&d.personComplete&&d.customerComplete&&d.execComplete]])],64)}const d=t=>((0,o.dD)("data-v-11274920"),t=t(),(0,o.Cn)(),t),b={class:"app"},y=d((()=>(0,o._)("div",{id:"snackbar"},"Some text some message..",-1))),h={id:"myModal"},C={class:"modal-content"},g=d((()=>(0,o._)("span",{class:"close"},"×",-1))),j={class:"row"},x={class:"column"},f={style:{display:"flex","flex-direction":"row"}},S=d((()=>(0,o._)("div",{style:{flex:"5"}},[(0,o._)("h1",{style:{padding:"25px","padding-bottom":"0px"}},"Adding Generics to the Exec Class"),(0,o._)("p",{style:{padding:"25px","padding-top":"0px"}},"Write functions that use the concept of generics to create the email for Executives based on their names")],-1))),v={style:{flex:"1"}},E=d((()=>(0,o._)("pre",null,'import java.util.*;\nimport java.text.*;\n\npublic class Exec extends Person{\n\tprivate final int empID;\n\tprivate static int employeeCount=0;\n\t\n\tpublic Exec()\n\t{\n\t\tsuper();\n\t\temployeeCount++;\n\t\tthis.empID=employeeCount;\n\t}\n\t\n\tpublic Exec(String name, String email) {\n\t\tsuper(name, email);\n\t\temployeeCount++;\n\t\tthis.empID=employeeCount;\n\t}\n\t\n\tpublic Exec(String name, long phone) {\n\t\tsuper(name, phone);\n\t\temployeeCount++;\n\t\tthis.empID=employeeCount;\n\t}\n\t\n\tpublic Exec(String name, String email, long phone) {\n\t\tsuper(name, email, phone);\n\t\temployeeCount++;\n\t\tthis.empID=employeeCount;\n\t}\n\t\n\tpublic int getEmpID() {\n\t\treturn empID;\n\t}\n\t\n\tpublic String requestVehicle(Reservation robj) throws ParseException\n\t{\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd");\n    Date d = sdformat.parse("2022-02-29");\n\t\tif(robj.getBookingDate().compareTo(d)==0)\n\t\t{\n\t\t\tif(robj.locateReservation().compareTo("Vehicle available")==0)\n\t\t\t\treturn "initiate contract";\n\t\t\telse\n\t\t\t\treturn "wait for vehicle";\n\t\t}\n\t\treturn "Booking date not matching";\n\t}\n\t\n\tpublic String signContract(Reservation robj)\n\t{\n\t\tSystem.out.println(robj.releaseContract());\n\t\trobj.getVehicleObj().updateKeyStatus();\n\t\treturn "Vehicle key handedover";\n\t}\n\t\n\tpublic String toString()\n\t{\n\t\treturn "[ID: "+ getEmpID()+ ", Name: "+getName()+\n\t\t\t\t", Email: "+getEmail()+", Phone: "+getPhone()+ ", City: "+getCity()+" ]";\n\t}\n\t\n            ',-1))),w=d((()=>(0,o._)("br",null,null,-1))),_=d((()=>(0,o._)("p",{id:"comment"},"//Override the addEmail method declared in Person",-1))),k=d((()=>(0,o._)("br",null,null,-1))),P=d((()=>(0,o._)("br",null,null,-1))),L=d((()=>(0,o._)("pre",null,'public class Customer extends Person{\n\t\n\tprivate final int customerID;\n\tprivate static int customerCount=0; \n\t\n\tpublic Customer()\n\t{\n\t\tsuper();\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, String email) {\n\t\tsuper(custName, email);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, long phone) {\n\t\tsuper(custName, phone);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, String email, long phone) {\n\t\tsuper(custName, email, phone);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic int getcustomerID() {\n\t\treturn customerID;\n\t}\n\t\n\tpublic String toString()\n\t{\n\t\treturn "[ID: "+ getcustomerID()+ ", Name: "+getName()+\n\t\t\t\t", Email: "+getEmail()+", Phone: "+getPhone()+ ", City: "+getCity()+" ]";\n\t}\n\n    @Override\n\tpublic Exec addEmail() {\n\t\n            ',-1))),T=d((()=>(0,o._)("p",{id:"comment"},[(0,o.Uk)("//Set the customer's email to Customer name + "),(0,o._)("b",null,'"@cust.gtravels.com"')],-1))),D=d((()=>(0,o._)("br",null,null,-1))),A=d((()=>(0,o._)("br",null,null,-1))),N=d((()=>(0,o._)("pre",null,'public class Customer extends Person{\n\t\n\tprivate final int customerID;\n\tprivate static int customerCount=0; \n\t\n\tpublic Customer()\n\t{\n\t\tsuper();\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, String email) {\n\t\tsuper(custName, email);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, long phone) {\n\t\tsuper(custName, phone);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, String email, long phone) {\n\t\tsuper(custName, email, phone);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic int getcustomerID() {\n\t\treturn customerID;\n\t}\n\t\n\tpublic String toString()\n\t{\n\t\treturn "[ID: "+ getcustomerID()+ ", Name: "+getName()+\n\t\t\t\t", Email: "+getEmail()+", Phone: "+getPhone()+ ", City: "+getCity()+" ]";\n\t}\n\n    @Override\n\tpublic Exec addEmail() {\n        Exec cobj=new Exec(this.getName(), this.getName()\n                +"@gtravels.com", this.getPhone());\n\t\tcobj.setCity(this.getCity());\n\t\treturn cobj;\n\t}\n}\n\t\n            ',-1))),I=[N];function O(t,n,e,r,a,l){return(0,o.wg)(),(0,o.iD)("main",b,[y,(0,o._)("div",h,[(0,o._)("div",C,[g,((0,o.wg)(),(0,o.j4)((0,o.LL)(a.currentComponent)))])]),(0,o._)("div",j,[(0,o._)("div",x,[(0,o._)("div",f,[S,(0,o._)("div",v,[(0,o._)("button",{style:(0,i.j5)([{float:"right","margin-bottom":"30px"},{display:a.display[1]}]),onClick:n[0]||(n[0]=t=>l.popup("getterComponent")),class:"button-30"},"Help",4)])]),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,i.j5)({display:a.display[0]})},[E,(0,o.Uk)("    @"),(0,o.wy)((0,o._)("input",{id:"one","onUpdate:modelValue":n[1]||(n[1]=n=>t.one=n),maxlength:"8",style:{width:"110px"},spellcheck:"false"},null,512),[[s.nr,t.one]]),w,(0,o.Uk)("   public Exec addEmail() { "),_,k,(0,o.Uk)(" } "),P,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[2]||(n[2]=t=>l.validate_one())},(0,i.zw)(a.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,i.j5)({display:a.display[1]})},[L,(0,o.Uk)("    Exec cobj = new Exec(this.getName(), this."),(0,o.wy)((0,o._)("input",{spellcheck:"false",id:"one","onUpdate:modelValue":n[3]||(n[3]=n=>t.one=n),maxlength:"7",style:{width:"100px"}},null,512),[[s.nr,t.one]]),(0,o.Uk)('() + "'),(0,o.wy)((0,o._)("input",{spellcheck:"false",id:"two","onUpdate:modelValue":n[4]||(n[4]=n=>t.two=n),maxlength:"13",style:{width:"170px"}},null,512),[[s.nr,t.two]]),(0,o.Uk)('", this.getPhone()); '),T,D,(0,o.Uk)(" } "),A,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[5]||(n[5]=t=>l.validate_two())},(0,i.zw)(a.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,i.j5)({display:a.display[2]})},I,4)])])])}var R=e(7756),W=e(3255),F=e(1717),U=e(3221),V=e(8028),B=e(3073),M=e(6277),H=e(6376),G=e(336),z=e(2645),Z=e(5401),q=e(4880),K=e(4335),$=e(6171),Y=e(7440),J=e(7836),Q=e(6596),X=e(6945),tt=e(7971),nt=e(5358),et=e(7063),ot=e(7870),it=e(6788),st=e(7033),rt=e(8486),at=e(4392),lt=e(2682),ct=e(6790),ut={components:{abstractComponent:R["default"],arrayListComponent:W["default"],arraysComponent:F["default"],classCastExceptionComponent:U["default"],constructorWritingComponent:V["default"],dateComponent:B["default"],extendsComponent:M["default"],functionCallingWithObjectComponent:H["default"],getterComponent:G["default"],interfaceComponent:z["default"],newVariableComponent:Z["default"],nullPointerExceptionComponent:q["default"],objectCreationComponent:K["default"],parseExceptionComponent:$["default"],passingArgumentsToFunctionsComponent:Y["default"],printFunctionComponent:J["default"],setterComponent:Q["default"],stringCompareComponent:X["default"],superKeywordComponent:tt["default"],thisComponent:nt["default"],tryCatchComponent:et["default"],behavioralComponent:ot["default"],builderComponent:it["default"],decoratorComponent:st["default"],factoryComponent:rt["default"],iteratorComponent:at["default"],singletonComponent:lt["default"],structuralComponent:ct["default"]},methods:{popup(t){this.currentComponent=t,console.log("popup");var n=document.getElementById("myModal");console.log(n);var e=document.getElementsByClassName("close")[0];n.style.display="block",console.log(n.style.display),e.onclick=function(){n.style.display="none"},window.onclick=function(t){t.target==n&&(n.style.display="none")}},correct1(){var t=document.getElementById("snackbar");t.innerHTML="Correct",t.style.backgroundColor="green",t.className="show",setTimeout((function(){t.className=t.className.replace("show","")}),3e3)},incorrect(){var t=document.getElementById("snackbar");t.innerHTML="Inorrect. Try again",t.style.backgroundColor="red",t.className="show",setTimeout((function(){t.className=t.className.replace("show","")}),3e3)},validate_one(){console.log(this.one,this.two),"Override"==this.one?(this.correct1(),this.display[0]="none",this.display[1]="block"):this.incorrect()},validate_two(){"getName"===this.two&&"@gtravels.com"==this.three?(this.correct1(),this.display[1]="none",this.display[2]="block"):this.incorrect()},validate_three(){"execobj"==this.five&&"Exec"==this.six?(this.correct1(),this.display[2]="none",this.display[3]="block",this.$emit("execComplete",!0)):this.incorrect()}},data(){return{id:"container",class:"wrapper",currentComponent:"constructorWritingComponent",button_value:"Next",button_text:"Incorrect. Try again",button_text_right:"Correct. Next",correct:!1,display:["block","none","none","none","none","none","none","none","none","none","none","none","none","none","none"]}}},mt=e(89);const pt=(0,mt.Z)(ut,[["render",O],["__scopeId","data-v-11274920"]]);var dt=pt,bt=e(5377);const yt=t=>((0,o.dD)("data-v-0834a9b7"),t=t(),(0,o.Cn)(),t),ht={class:"app"},Ct=yt((()=>(0,o._)("div",{id:"snackbar"},"Some text some message..",-1))),gt={id:"myModal"},jt={class:"modal-content"},xt=yt((()=>(0,o._)("span",{class:"close"},"×",-1))),ft={class:"row"},St={class:"column"},vt={style:{display:"flex","flex-direction":"row"}},Et=yt((()=>(0,o._)("div",{style:{flex:"5"}},[(0,o._)("h1",{style:{padding:"25px","padding-bottom":"0px"}},"Modifying Customer to Use Generics"),(0,o._)("p",{style:{padding:"25px","padding-top":"0px"}},"Use generics to write functions to add the appropriate email domain based on user type")],-1))),wt={style:{flex:"1"}},_t=yt((()=>(0,o._)("pre",null,'public class Customer extends Person{\n\t\n\tprivate final int customerID;\n\tprivate static int customerCount=0; \n\t\n\tpublic Customer()\n\t{\n\t\tsuper();\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, String email) {\n\t\tsuper(custName, email);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, long phone) {\n\t\tsuper(custName, phone);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, String email, long phone) {\n\t\tsuper(custName, email, phone);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic int getcustomerID() {\n\t\treturn customerID;\n\t}\n\t\n\tpublic String toString()\n\t{\n\t\treturn "[ID: "+ getcustomerID()+ ", Name: "+getName()+\n\t\t\t\t", Email: "+getEmail()+", Phone: "+getPhone()+ ", City: "+getCity()+" ]";\n\t}\n\t\n}\n            ',-1))),kt=yt((()=>(0,o._)("br",null,null,-1))),Pt=yt((()=>(0,o._)("p",{id:"comment"},"//Override the addEmail method declared in Person",-1))),Lt=yt((()=>(0,o._)("br",null,null,-1))),Tt=yt((()=>(0,o._)("br",null,null,-1))),Dt=yt((()=>(0,o._)("pre",null,'public class Customer extends Person{\n\t\n\tprivate final int customerID;\n\tprivate static int customerCount=0; \n\t\n\tpublic Customer()\n\t{\n\t\tsuper();\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, String email) {\n\t\tsuper(custName, email);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, long phone) {\n\t\tsuper(custName, phone);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, String email, long phone) {\n\t\tsuper(custName, email, phone);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic int getcustomerID() {\n\t\treturn customerID;\n\t}\n\t\n\tpublic String toString()\n\t{\n\t\treturn "[ID: "+ getcustomerID()+ ", Name: "+getName()+\n\t\t\t\t", Email: "+getEmail()+", Phone: "+getPhone()+ ", City: "+getCity()+" ]";\n\t}\n\n    @Override\n\tpublic Customer addEmail() {\n\t\n            ',-1))),At=yt((()=>(0,o._)("p",{id:"comment"},[(0,o.Uk)("//Set the customer's email to Customer name + "),(0,o._)("b",null,'"@cust.gtravels.com"')],-1))),Nt=yt((()=>(0,o._)("br",null,null,-1))),It=yt((()=>(0,o._)("br",null,null,-1))),Ot=yt((()=>(0,o._)("pre",null,'public class Customer extends Person{\n\t\n\tprivate final int customerID;\n\tprivate static int customerCount=0; \n\t\n\tpublic Customer()\n\t{\n\t\tsuper();\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, String email) {\n\t\tsuper(custName, email);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, long phone) {\n\t\tsuper(custName, phone);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, String email, long phone) {\n\t\tsuper(custName, email, phone);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic int getcustomerID() {\n\t\treturn customerID;\n\t}\n\t\n\tpublic String toString()\n\t{\n\t\treturn "[ID: "+ getcustomerID()+ ", Name: "+getName()+\n\t\t\t\t", Email: "+getEmail()+", Phone: "+getPhone()+ ", City: "+getCity()+" ]";\n\t}\n\n    @Override\n\tpublic Customer addEmail() {\n        Customer cobj=new Customer(this.getName(), this.getName()\n                +"@cust.gtravels.com", this.getPhone());\n\t\tcobj.setCity(this.getCity());\n\t\treturn cobj;\n\t}\n}\n\t\n            ',-1))),Rt=[Ot];function Wt(t,n,e,r,a,l){return(0,o.wg)(),(0,o.iD)("main",ht,[Ct,(0,o._)("div",gt,[(0,o._)("div",jt,[xt,((0,o.wg)(),(0,o.j4)((0,o.LL)(a.currentComponent)))])]),(0,o._)("div",ft,[(0,o._)("div",St,[(0,o._)("div",vt,[Et,(0,o._)("div",wt,[(0,o._)("button",{style:(0,i.j5)([{float:"right","margin-bottom":"30px"},{display:a.display[0]}]),onClick:n[0]||(n[0]=t=>l.popup("getterComponent")),class:"button-30"},"Help",4),(0,o._)("button",{style:(0,i.j5)([{float:"right","margin-bottom":"30px"},{display:a.display[1]}]),onClick:n[1]||(n[1]=t=>l.popup("getterComponent")),class:"button-30"},"Help",4)])]),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,i.j5)({display:a.display[0]})},[_t,(0,o.Uk)("    @"),(0,o.wy)((0,o._)("input",{id:"one","onUpdate:modelValue":n[2]||(n[2]=n=>t.one=n),maxlength:"8",style:{width:"110px"},spellcheck:"false"},null,512),[[s.nr,t.one]]),kt,(0,o.Uk)("   public Customer addEmail() { "),Pt,Lt,(0,o.Uk)(" } "),Tt,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[3]||(n[3]=t=>l.validate_one())},(0,i.zw)(a.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,i.j5)({display:a.display[1]})},[Dt,(0,o.Uk)("    Customer cobj = new Customer(this.getName(), this."),(0,o.wy)((0,o._)("input",{spellcheck:"false",id:"one","onUpdate:modelValue":n[4]||(n[4]=n=>t.one=n),maxlength:"7",style:{width:"100px"}},null,512),[[s.nr,t.one]]),(0,o.Uk)('() + "'),(0,o.wy)((0,o._)("input",{spellcheck:"false",id:"two","onUpdate:modelValue":n[5]||(n[5]=n=>t.two=n),maxlength:"18",style:{width:"200px"}},null,512),[[s.nr,t.two]]),(0,o.Uk)('", this.getPhone()); '),At,Nt,(0,o.Uk)(" } "),It,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[6]||(n[6]=t=>l.validate_two())},(0,i.zw)(a.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,i.j5)({display:a.display[2]})},Rt,4)])])])}var Ft={components:{abstractComponent:R["default"],arrayListComponent:W["default"],classCastExceptionComponent:U["default"],constructorWritingComponent:V["default"],dateComponent:B["default"],extendsComponent:M["default"],functionCallingWithObjectComponent:H["default"],getterComponent:G["default"],interfaceComponent:z["default"],newVariableComponent:Z["default"],nullPointerExceptionComponent:q["default"],objectCreationComponent:K["default"],parseExceptionComponent:$["default"],passingArgumentsToFunctionsComponent:Y["default"],printFunctionComponent:J["default"],setterComponent:Q["default"],stringCompareComponent:X["default"],superKeywordComponent:tt["default"],thisComponent:nt["default"],tryCatchComponent:et["default"]},methods:{popup(t){this.currentComponent=t,console.log("popup");var n=document.getElementById("myModal");console.log(n);var e=document.getElementsByClassName("close")[0];n.style.display="block",console.log(n.style.display),e.onclick=function(){n.style.display="none"},window.onclick=function(t){t.target==n&&(n.style.display="none")}},correct1(){var t=document.getElementById("snackbar");t.innerHTML="Correct",t.style.backgroundColor="green",t.className="show",setTimeout((function(){t.className=t.className.replace("show","")}),3e3)},incorrect(){var t=document.getElementById("snackbar");t.innerHTML="Inorrect. Try again",t.style.backgroundColor="red",t.className="show",setTimeout((function(){t.className=t.className.replace("show","")}),3e3)},validate_one(){console.log(this.one,this.two),"Override"==this.one?(this.correct1(),this.display[0]="none",this.display[1]="block"):this.incorrect()},validate_two(){"getName"===this.two&&"@cust.gtravels.com"==this.three?(this.correct1(),this.display[1]="none",this.display[2]="block"):this.incorrect()},validate_three(){"execobj"==this.five&&"Exec"==this.six?(this.correct1(),this.display[2]="none",this.display[3]="block",this.$emit("customerComplete",!0)):this.incorrect()}},data(){return{id:"container",class:"wrapper",currentComponent:"constructorWritingComponent",button_value:"Next",button_text:"Incorrect. Try again",button_text_right:"Correct. Next",correct:!1,display:["block","none","none","none","none","none","none","none","none","none","none","none","none","none","none"]}}};const Ut=(0,mt.Z)(Ft,[["render",Wt],["__scopeId","data-v-0834a9b7"]]);var Vt=Ut,Bt=e(749);const Mt=t=>((0,o.dD)("data-v-940d0526"),t=t(),(0,o.Cn)(),t),Ht={class:"app"},Gt=Mt((()=>(0,o._)("div",{id:"snackbar"},"Some text some message..",-1))),zt={id:"myModal"},Zt={class:"modal-content"},qt=Mt((()=>(0,o._)("span",{class:"close"},"×",-1))),Kt={class:"row"},$t={class:"column"},Yt=Mt((()=>(0,o._)("h1",{style:{padding:"25px","padding-bottom":"0px"}},null,-1))),Jt=Mt((()=>(0,o._)("p",{style:{padding:"25px","padding-top":"0px"}},null,-1))),Qt={style:{display:"flex","flex-direction":"row"}},Xt=Mt((()=>(0,o._)("div",{style:{flex:"5"}},[(0,o._)("h1",{style:{padding:"25px","padding-bottom":"0px"}},"Adding Generics to Person"),(0,o._)("p",{style:{padding:"25px","padding-top":"0px"}},"Modify the Person class to add an abstract method called addEmail()")],-1))),tn={style:{flex:"1"}},nn=Mt((()=>(0,o._)("pre",null,"\nabstract public class Person {\n\tprivate String name;\n\tprivate String email;\n\tprivate long phone;\n\tprivate String city;\n\n\tpublic Person()\n\t{\n\t\t\n\t}\n\t\n\tpublic Person(String name, String email) {\n\t\tthis.name = name;\n\t\tthis.setEmail(email);\n\t}\n\t\n\tpublic Person(String name, long phone) {\n\t\tthis.name = name;\n\t\tthis.setPhone(phone);\n\t}\n\t\n\tpublic Person(String name, String email, long phone) {\n\t\tthis.name = name;\n\t\tthis.email =email;\n\t\tthis.setPhone(phone);\n\t}\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\t\n\t\n\tpublic String getEmail() {\n\t\treturn email;\n\t}\n\n\tpublic void setEmail(String email) {\n\t\tthis.email = email;\n\t}\n\n\tpublic long getPhone() {\n\t\treturn phone;\n\t}\n\n\tpublic void setPhone(long phone) {\t\t\n\t\tif(phone >= 0000000000L && phone <= 9999999999L)\n\t\t\tthis.phone = phone;\n\t\telse\n\t\t\tthis.phone = 9999999999L;\n\t\t\n\t}\n\n\tpublic String getCity() {\n\t\treturn city;\n\t}\n\n\tpublic void setCity(String city) {\n\t\tthis.city = city;\n\t}\n            ",-1))),en=Mt((()=>(0,o._)("p",{id:"comment"},"//Write a method 'addEmailList'. Return a generic that extends Person",-1))),on=Mt((()=>(0,o._)("br",null,null,-1))),sn=Mt((()=>(0,o._)("br",null,null,-1))),rn=Mt((()=>(0,o._)("pre",null,"\nabstract public class Person {\n\tprivate String name;\n\tprivate String email;\n\tprivate long phone;\n\tprivate String city;\n\n\tpublic Person()\n\t{\n\t\t\n\t}\n\t\n\tpublic Person(String name, String email) {\n\t\tthis.name = name;\n\t\tthis.setEmail(email);\n\t}\n\t\n\tpublic Person(String name, long phone) {\n\t\tthis.name = name;\n\t\tthis.setPhone(phone);\n\t}\n\t\n\tpublic Person(String name, String email, long phone) {\n\t\tthis.name = name;\n\t\tthis.email =email;\n\t\tthis.setPhone(phone);\n\t}\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\t\n\t\n\tpublic String getEmail() {\n\t\treturn email;\n\t}\n\n\tpublic void setEmail(String email) {\n\t\tthis.email = email;\n\t}\n\n\tpublic long getPhone() {\n\t\treturn phone;\n\t}\n\n\tpublic void setPhone(long phone) {\t\t\n\t\tif(phone >= 0000000000L && phone <= 9999999999L)\n\t\t\tthis.phone = phone;\n\t\telse\n\t\t\tthis.phone = 9999999999L;\n\t\t\n\t}\n\n\tpublic String getCity() {\n\t\treturn city;\n\t}\n\n\tpublic void setCity(String city) {\n\t\tthis.city = city;\n\t}\n\n    public abstract <T extends Person> T addEmail();\n\n}\n            ",-1))),an=[rn];function ln(t,n,e,r,a,l){return(0,o.wg)(),(0,o.iD)("main",Ht,[Gt,(0,o._)("div",zt,[(0,o._)("div",Zt,[qt,((0,o.wg)(),(0,o.j4)((0,o.LL)(a.currentComponent)))])]),(0,o._)("div",Kt,[(0,o._)("div",$t,[Yt,Jt,(0,o._)("div",Qt,[Xt,(0,o._)("div",tn,[(0,o._)("button",{style:(0,i.j5)([{float:"right","margin-bottom":"30px"},{display:a.display[0]}]),onClick:n[0]||(n[0]=t=>l.popup("abstractComponent")),class:"button-30"},"Help",4)])]),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,i.j5)({display:a.display[0]})},[nn,(0,o.Uk)("    public "),(0,o.wy)((0,o._)("input",{id:"one","onUpdate:modelValue":n[1]||(n[1]=n=>t.one=n),maxlength:"8",style:{width:"100px"},spellcheck:"false"},null,512),[[s.nr,t.one]]),(0,o.Uk)(" <T extends Person> T "),(0,o.wy)((0,o._)("input",{id:"two","onUpdate:modelValue":n[2]||(n[2]=n=>t.two=n),maxlength:"8",style:{width:"100px"},spellcheck:"false"},null,512),[[s.nr,t.two]]),(0,o.Uk)("(); "),en,on,(0,o.Uk)(" } "),sn,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[3]||(n[3]=t=>l.validate_one())},(0,i.zw)(a.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,i.j5)({display:a.display[1]})},an,4)])])])}var cn={components:{abstractComponent:R["default"],arrayListComponent:W["default"],arraysComponent:F["default"],classCastExceptionComponent:U["default"],constructorWritingComponent:V["default"],dateComponent:B["default"],extendsComponent:M["default"],functionCallingWithObjectComponent:H["default"],getterComponent:G["default"],interfaceComponent:z["default"],newVariableComponent:Z["default"],nullPointerExceptionComponent:q["default"],objectCreationComponent:K["default"],parseExceptionComponent:$["default"],passingArgumentsToFunctionsComponent:Y["default"],printFunctionComponent:J["default"],setterComponent:Q["default"],stringCompareComponent:X["default"],superKeywordComponent:tt["default"],thisComponent:nt["default"],tryCatchComponent:et["default"]},methods:{popup(t){this.currentComponent=t,console.log("popup");var n=document.getElementById("myModal");console.log(n);var e=document.getElementsByClassName("close")[0];n.style.display="block",console.log(n.style.display),e.onclick=function(){n.style.display="none"},window.onclick=function(t){t.target==n&&(n.style.display="none")}},correct1(){var t=document.getElementById("snackbar");t.innerHTML="Correct",t.style.backgroundColor="green",t.className="show",setTimeout((function(){t.className=t.className.replace("show","")}),3e3)},incorrect(){var t=document.getElementById("snackbar");t.innerHTML="Inorrect. Try again",t.style.backgroundColor="red",t.className="show",setTimeout((function(){t.className=t.className.replace("show","")}),3e3)},validate_one(){console.log(this.one,this.two),"abstract"==this.one&&"addEmail"==this.two?(this.correct1(),this.display[0]="none",this.display[1]="block",this.$emit("personComplete",!0)):this.incorrect()}},data(){return{id:"container",class:"wrapper",currentComponent:"constructorWritingComponent",button_value:"Next",button_text:"Incorrect. Try again",button_text_right:"Correct. Next",correct:!1,display:["block","none","none","none","none","none","none","none","none","none","none","none","none","none","none"]}}};const un=(0,mt.Z)(cn,[["render",ln],["__scopeId","data-v-940d0526"]]);var mn=un,pn=e(9683),dn=e(6646),bn=e(8781);const yn=t=>((0,o.dD)("data-v-1dbecf87"),t=t(),(0,o.Cn)(),t),hn={class:"app"},Cn=yn((()=>(0,o._)("div",{id:"snackbar"},"Some text some message..",-1))),gn={id:"myModal"},jn={class:"modal-content"},xn=yn((()=>(0,o._)("span",{class:"close"},"×",-1))),fn={class:"row"},Sn={class:"column"},vn={style:{display:"flex","flex-direction":"row"}},En=yn((()=>(0,o._)("div",{style:{flex:"5"}},[(0,o._)("h1",{style:{padding:"25px","padding-bottom":"0px"}},"Accommodating Generics in the Test Driver"),(0,o._)("p",{style:{padding:"25px","padding-top":"0px"}},"Modify the Test Driver class by adding functions to count, display and add email, that employ Generics")],-1))),wn={style:{flex:"1"}},_n=yn((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\t\t\n\t\t//step:1 create a person object and initialize with a customer and exec object\n\t\tArrayList<Person> pobj= new ArrayList<>();\n\t\tpobj.add(new Exec("EFG", "efg@gmail.com"));\n\t\tpobj.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj.add(new Customer("DEF", 8654678976L));\n\t\tpobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(pobj);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Customer> pobj1= new ArrayList<>();\n\t\tpobj1.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj1.add(new Customer("DEF", 8654678976L));\n\t\tpobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(pobj1);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Exec> pobj2= new ArrayList<>();\n\t\tpobj2.add(new Exec("ABC1", "abc1@gmail.com"));\n\t\tpobj2.add(new Exec("DEF1", 8654678976L));\n\t\tpobj2.add(new Exec("GHI1", "ghi1@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Exec: [");\n\t\tdisplayAll(pobj2);\n\t\tSystem.out.println("]");\n\t\t\n\t\tSystem.out.println("Count of persons with Email : " +countPersonWithEmail(pobj));\n\t\tSystem.out.println("Count of persons with Phone : " +countPersonWithPhone(pobj));\n\t\tSystem.out.println("Count of Customer with Email : " +countPersonWithEmail(pobj1));\n\t\tSystem.out.println("Count of Customer with Phone : " +countPersonWithPhone(pobj1));\n\t\tSystem.out.println("Count of Exec with Email : " +countPersonWithEmail(pobj2));\n\t\tSystem.out.println("Count of Exec with Phone : " +countPersonWithPhone(pobj2));\n\t\t\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj));\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj1));\n\t\t//System.out.println("Count of Customers in the list : " +countCustomer(pobj2));//compiler error\n\t\t\n\t\tSystem.out.println("Count of Execs in the list : " +countExec(pobj));\n\t\t//System.out.println("Count of Execs in the list : " +countExec(pobj1)); //compiler error\n\t\tSystem.out.println("Count of Execs in the list : " +countExec(pobj2));\n\t\t\n\t\tArrayList<Person> a = addEmailList(pobj);\n\t\tArrayList<Customer> b = addEmailList(pobj1);\n\t\tArrayList<Exec> c = addEmailList(pobj2);\n\t\t\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(a);\n\t\tSystem.out.println("]");\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(b);\n\t\tSystem.out.println("]");\n\t\tSystem.out.println("list of Exec: [");\n\t\tdisplayAll(c);\n\t\tSystem.out.println("]");\n\t\t\t\t\n\t\trentalSystem.execobj=new Exec[1];\t\t\n\t\t//step 2: initialize the exec object with pobj[0] and check\n\t\t//rentalSystem.execobj[0]=pobj.get(0); //compiler error due to type mismatch\n\t\t//step 3: type cast\n\t\t//rentalSystem.execobj[0]=(Exec)pobj.get(0); //no compiler error or runtime error\n\t\t\n\t\t//run the code and check to see the output\n\t\t//Vehicle is available, initiating contract..\n\t\t//Reservation released\n\t\t//Vehicle key handedover\n\t\t\n\t\t//step 4: initialize the exec object with pobj[1] and check\n\t\t//rentalSystem.execobj[0]=pobj.get(1); //compiler error due to type mismatch\n\t\t//step 5: type cast to Exec\n\t\t//rentalSystem.execobj[0]=(Exec)pobj.get(1); //no compiler error\n\t\t\n\t\t//run the code and check \n\t\t//the following runtime error appears\n\t\t//Exception in thread "main" java.lang.ClassCastException: class Customer cannot be cast to class Exec (Customer and Exec are in unnamed module of loader \'app\')\n\t\t//at TestDriver.main(TestDriver.java:23)\n\t\t\n\t\t//Step 6: resolve using try-catch block and instanceof method\t\n\t\ttry\n\t\t{\n\t\t\trentalSystem.execobj[0]=(Exec)pobj.get(1);\n\t\t}\n\t\tcatch(ClassCastException e)\n\t\t{\n\t\t\tif(pobj.get(1) instanceof Exec)\n\t\t\t\trentalSystem.execobj[0] =(Exec) pobj.get(1);\n\t\t}\n\t\t\n\t\t\n\t\trentalSystem.cobj= new Customer[3];\n\t\trentalSystem.cobj[0]=(Customer) pobj.get(1);\n\t\trentalSystem.cobj[1]=(Customer) pobj.get(2);\n\t\trentalSystem.cobj[2]=(Customer) pobj.get(3);\n\t\trentalSystem.cobj[0].setCity("Coimbatore");\n\t\trentalSystem.cobj[1].setCity("Coimbatore");\n\t\trentalSystem.cobj[2].setCity("Chennai");\n\t\t\n\t\trentalSystem.vobj = new Vehicle[1];\n\t\trentalSystem.vobj[0]=new Vehicle(1234);\n\t\t\n\t\trentalSystem.robj=new Reservation[1];\n\t\trentalSystem.robj[0]= new Reservation(rentalSystem.cobj[0],rentalSystem.vobj[0]);\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd");\n        Date d = sdformat.parse("2022-02-29");\n\t\trentalSystem.robj[0].setBookingDate(d);\n\t\trentalSystem.robj[0].setContractStatus("Reservation not released");\n\t\t\n\t\t//run this code and check the following error appears\n\t\t//Exception in thread "main" java.lang.NullPointerException: Cannot invoke "Exec.requestVehicle(Reservation)" because "cl" is null\n\t\t//at RentalSystem.visitOffice(RentalSystem.java:18)\n\t\t//at TestDriver.main(TestDriver.java:62)\n\t\t\n\t\t//Step 7: resolve using a try-catch block to handle the NullPointerException\n\t\ttry\n\t\t{\n\t\t\trentalSystem.visitOffice(rentalSystem.robj[0]);\n\t\t}\n\t\tcatch(NullPointerException e)\n\t\t{\n\t\t\tSystem.out.println("wait for exec to be assigned");\n\t\t}\t\t\n\t}\t\n\t\n\tpublic static <T extends Person> int countPersonWithEmail(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n\t\tfor(T a: alist)\n\t\t{\n\t\t\tif(a.getEmail()!=null)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static <T extends Person> int countPersonWithPhone(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n\t\tfor(T a: alist)\n\t\t{\n\t\t\tif(a.getPhone()!=0L && a.getPhone()!=999999999L)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static int countCustomer(ArrayList<? super Customer> alist)\n\t{\n\t\tint count=0;\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tif(a instanceof Customer)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static int countExec(ArrayList<? super Exec> alist)\n\t{\n\t\tint count=0;\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tif(a instanceof Exec)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static <T extends Person> void displayAll(ArrayList<T> alist)\n\t{\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tSystem.out.println(a.toString());\n\t\t}\n\t}\t\n\t\n\tpublic static <T extends Person> ArrayList<T> addEmailList(ArrayList<T> alist)\n\t{\n\t\tArrayList<T> newList = new ArrayList<>();\n\t\tfor(T a:alist)\n\t\t\tnewList.add(a.addEmail());\n\t\treturn newList;\n\t}\n\n\t\n}\n\n            ',-1))),kn=yn((()=>(0,o._)("br",null,null,-1))),Pn=yn((()=>(0,o._)("p",{id:"comment"},"//Write a method 'addEmailList'. Return a generic that extends Person",-1))),Ln=yn((()=>(0,o._)("br",null,null,-1))),Tn=yn((()=>(0,o._)("br",null,null,-1))),Dn=yn((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\t\t\n\t\t//step:1 create a person object and initialize with a customer and exec object\n\t\tArrayList<Person> pobj= new ArrayList<>();\n\t\tpobj.add(new Exec("EFG", "efg@gmail.com"));\n\t\tpobj.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj.add(new Customer("DEF", 8654678976L));\n\t\tpobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(pobj);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Customer> pobj1= new ArrayList<>();\n\t\tpobj1.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj1.add(new Customer("DEF", 8654678976L));\n\t\tpobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(pobj1);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Exec> pobj2= new ArrayList<>();\n\t\tpobj2.add(new Exec("ABC1", "abc1@gmail.com"));\n\t\tpobj2.add(new Exec("DEF1", 8654678976L));\n\t\tpobj2.add(new Exec("GHI1", "ghi1@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Exec: [");\n\t\tdisplayAll(pobj2);\n\t\tSystem.out.println("]");\n\t\t\n\t\tSystem.out.println("Count of persons with Email : " +countPersonWithEmail(pobj));\n\t\tSystem.out.println("Count of persons with Phone : " +countPersonWithPhone(pobj));\n\t\tSystem.out.println("Count of Customer with Email : " +countPersonWithEmail(pobj1));\n\t\tSystem.out.println("Count of Customer with Phone : " +countPersonWithPhone(pobj1));\n\t\tSystem.out.println("Count of Exec with Email : " +countPersonWithEmail(pobj2));\n\t\tSystem.out.println("Count of Exec with Phone : " +countPersonWithPhone(pobj2));\n\t\t\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj));\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj1));\n\t\t//System.out.println("Count of Customers in the list : " +countCustomer(pobj2));//compiler error\n\t\t\n\t\tSystem.out.println("Count of Execs in the list : " +countExec(pobj));\n\t\t//System.out.println("Count of Execs in the list : " +countExec(pobj1)); //compiler error\n\t\tSystem.out.println("Count of Execs in the list : " +countExec(pobj2));\n\t\t\n\t\tArrayList<Person> a = addEmailList(pobj);\n\t\tArrayList<Customer> b = addEmailList(pobj1);\n\t\tArrayList<Exec> c = addEmailList(pobj2);\n\t\t\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(a);\n\t\tSystem.out.println("]");\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(b);\n\t\tSystem.out.println("]");\n\t\tSystem.out.println("list of Exec: [");\n\t\tdisplayAll(c);\n\t\tSystem.out.println("]");\n\t\t\t\t\n\t\trentalSystem.execobj=new Exec[1];\t\t\n\t\t//step 2: initialize the exec object with pobj[0] and check\n\t\t//rentalSystem.execobj[0]=pobj.get(0); //compiler error due to type mismatch\n\t\t//step 3: type cast\n\t\t//rentalSystem.execobj[0]=(Exec)pobj.get(0); //no compiler error or runtime error\n\t\t\n\t\t//run the code and check to see the output\n\t\t//Vehicle is available, initiating contract..\n\t\t//Reservation released\n\t\t//Vehicle key handedover\n\t\t\n\t\t//step 4: initialize the exec object with pobj[1] and check\n\t\t//rentalSystem.execobj[0]=pobj.get(1); //compiler error due to type mismatch\n\t\t//step 5: type cast to Exec\n\t\t//rentalSystem.execobj[0]=(Exec)pobj.get(1); //no compiler error\n\t\t\n\t\t//run the code and check \n\t\t//the following runtime error appears\n\t\t//Exception in thread "main" java.lang.ClassCastException: class Customer cannot be cast to class Exec (Customer and Exec are in unnamed module of loader \'app\')\n\t\t//at TestDriver.main(TestDriver.java:23)\n\t\t\n\t\t//Step 6: resolve using try-catch block and instanceof method\t\n\t\ttry\n\t\t{\n\t\t\trentalSystem.execobj[0]=(Exec)pobj.get(1);\n\t\t}\n\t\tcatch(ClassCastException e)\n\t\t{\n\t\t\tif(pobj.get(1) instanceof Exec)\n\t\t\t\trentalSystem.execobj[0] =(Exec) pobj.get(1);\n\t\t}\n\t\t\n\t\t\n\t\trentalSystem.cobj= new Customer[3];\n\t\trentalSystem.cobj[0]=(Customer) pobj.get(1);\n\t\trentalSystem.cobj[1]=(Customer) pobj.get(2);\n\t\trentalSystem.cobj[2]=(Customer) pobj.get(3);\n\t\trentalSystem.cobj[0].setCity("Coimbatore");\n\t\trentalSystem.cobj[1].setCity("Coimbatore");\n\t\trentalSystem.cobj[2].setCity("Chennai");\n\t\t\n\t\trentalSystem.vobj = new Vehicle[1];\n\t\trentalSystem.vobj[0]=new Vehicle(1234);\n\t\t\n\t\trentalSystem.robj=new Reservation[1];\n\t\trentalSystem.robj[0]= new Reservation(rentalSystem.cobj[0],rentalSystem.vobj[0]);\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd");\n        Date d = sdformat.parse("2022-02-29");\n\t\trentalSystem.robj[0].setBookingDate(d);\n\t\trentalSystem.robj[0].setContractStatus("Reservation not released");\n\t\t\n\t\t//run this code and check the following error appears\n\t\t//Exception in thread "main" java.lang.NullPointerException: Cannot invoke "Exec.requestVehicle(Reservation)" because "cl" is null\n\t\t//at RentalSystem.visitOffice(RentalSystem.java:18)\n\t\t//at TestDriver.main(TestDriver.java:62)\n\t\t\n\t\t//Step 7: resolve using a try-catch block to handle the NullPointerException\n\t\ttry\n\t\t{\n\t\t\trentalSystem.visitOffice(rentalSystem.robj[0]);\n\t\t}\n\t\tcatch(NullPointerException e)\n\t\t{\n\t\t\tSystem.out.println("wait for exec to be assigned");\n\t\t}\t\t\n\t}\t\n\t\n\tpublic static <T extends Person> int countPersonWithEmail(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n\t\tfor(T a: alist)\n\t\t{\n\t\t\tif(a.getEmail()!=null)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static <T extends Person> int countPersonWithPhone(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n\t\tfor(T a: alist)\n\t\t{\n\t\t\tif(a.getPhone()!=0L && a.getPhone()!=999999999L)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static int countCustomer(ArrayList<? super Customer> alist)\n\t{\n\t\tint count=0;\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tif(a instanceof Customer)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static int countExec(ArrayList<? super Exec> alist)\n\t{\n\t\tint count=0;\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tif(a instanceof Exec)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static <T extends Person> void displayAll(ArrayList<T> alist)\n\t{\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tSystem.out.println(a.toString());\n\t\t}\n\t}\t\n\t\n\tpublic static <T extends Person> ArrayList<T> addEmailList(ArrayList<T> alist)\n\t{\n\t\tArrayList<T> newList = new ArrayList<>();\n\t\tfor(T a:alist)\n\t\t\tnewList.add(a.addEmail());\n\t\treturn newList;\n\t}\n\n\t\n}\n\npublic static <T extends Person> ArrayList<T> addEmailList(ArrayList<T> alist)\n\t{\n            ',-1))),An=yn((()=>(0,o._)("p",{id:"comment"},"//Delcare an array list that can store generics of type 'T'",-1))),Nn=yn((()=>(0,o._)("br",null,null,-1))),In=yn((()=>(0,o._)("br",null,null,-1))),On=yn((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\t\t\n\t\t//step:1 create a person object and initialize with a customer and exec object\n\t\tArrayList<Person> pobj= new ArrayList<>();\n\t\tpobj.add(new Exec("EFG", "efg@gmail.com"));\n\t\tpobj.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj.add(new Customer("DEF", 8654678976L));\n\t\tpobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(pobj);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Customer> pobj1= new ArrayList<>();\n\t\tpobj1.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj1.add(new Customer("DEF", 8654678976L));\n\t\tpobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(pobj1);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Exec> pobj2= new ArrayList<>();\n\t\tpobj2.add(new Exec("ABC1", "abc1@gmail.com"));\n\t\tpobj2.add(new Exec("DEF1", 8654678976L));\n\t\tpobj2.add(new Exec("GHI1", "ghi1@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Exec: [");\n\t\tdisplayAll(pobj2);\n\t\tSystem.out.println("]");\n\t\t\n\t\tSystem.out.println("Count of persons with Email : " +countPersonWithEmail(pobj));\n\t\tSystem.out.println("Count of persons with Phone : " +countPersonWithPhone(pobj));\n\t\tSystem.out.println("Count of Customer with Email : " +countPersonWithEmail(pobj1));\n\t\tSystem.out.println("Count of Customer with Phone : " +countPersonWithPhone(pobj1));\n\t\tSystem.out.println("Count of Exec with Email : " +countPersonWithEmail(pobj2));\n\t\tSystem.out.println("Count of Exec with Phone : " +countPersonWithPhone(pobj2));\n\t\t\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj));\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj1));\n\t\t//System.out.println("Count of Customers in the list : " +countCustomer(pobj2));//compiler error\n\t\t\n\t\tSystem.out.println("Count of Execs in the list : " +countExec(pobj));\n\t\t//System.out.println("Count of Execs in the list : " +countExec(pobj1)); //compiler error\n\t\tSystem.out.println("Count of Execs in the list : " +countExec(pobj2));\n\t\t\n\t\tArrayList<Person> a = addEmailList(pobj);\n\t\tArrayList<Customer> b = addEmailList(pobj1);\n\t\tArrayList<Exec> c = addEmailList(pobj2);\n\t\t\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(a);\n\t\tSystem.out.println("]");\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(b);\n\t\tSystem.out.println("]");\n\t\tSystem.out.println("list of Exec: [");\n\t\tdisplayAll(c);\n\t\tSystem.out.println("]");\n\t\t\t\t\n\t\trentalSystem.execobj=new Exec[1];\t\t\n\t\t//step 2: initialize the exec object with pobj[0] and check\n\t\t//rentalSystem.execobj[0]=pobj.get(0); //compiler error due to type mismatch\n\t\t//step 3: type cast\n\t\t//rentalSystem.execobj[0]=(Exec)pobj.get(0); //no compiler error or runtime error\n\t\t\n\t\t//run the code and check to see the output\n\t\t//Vehicle is available, initiating contract..\n\t\t//Reservation released\n\t\t//Vehicle key handedover\n\t\t\n\t\t//step 4: initialize the exec object with pobj[1] and check\n\t\t//rentalSystem.execobj[0]=pobj.get(1); //compiler error due to type mismatch\n\t\t//step 5: type cast to Exec\n\t\t//rentalSystem.execobj[0]=(Exec)pobj.get(1); //no compiler error\n\t\t\n\t\t//run the code and check \n\t\t//the following runtime error appears\n\t\t//Exception in thread "main" java.lang.ClassCastException: class Customer cannot be cast to class Exec (Customer and Exec are in unnamed module of loader \'app\')\n\t\t//at TestDriver.main(TestDriver.java:23)\n\t\t\n\t\t//Step 6: resolve using try-catch block and instanceof method\t\n\t\ttry\n\t\t{\n\t\t\trentalSystem.execobj[0]=(Exec)pobj.get(1);\n\t\t}\n\t\tcatch(ClassCastException e)\n\t\t{\n\t\t\tif(pobj.get(1) instanceof Exec)\n\t\t\t\trentalSystem.execobj[0] =(Exec) pobj.get(1);\n\t\t}\n\t\t\n\t\t\n\t\trentalSystem.cobj= new Customer[3];\n\t\trentalSystem.cobj[0]=(Customer) pobj.get(1);\n\t\trentalSystem.cobj[1]=(Customer) pobj.get(2);\n\t\trentalSystem.cobj[2]=(Customer) pobj.get(3);\n\t\trentalSystem.cobj[0].setCity("Coimbatore");\n\t\trentalSystem.cobj[1].setCity("Coimbatore");\n\t\trentalSystem.cobj[2].setCity("Chennai");\n\t\t\n\t\trentalSystem.vobj = new Vehicle[1];\n\t\trentalSystem.vobj[0]=new Vehicle(1234);\n\t\t\n\t\trentalSystem.robj=new Reservation[1];\n\t\trentalSystem.robj[0]= new Reservation(rentalSystem.cobj[0],rentalSystem.vobj[0]);\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd");\n        Date d = sdformat.parse("2022-02-29");\n\t\trentalSystem.robj[0].setBookingDate(d);\n\t\trentalSystem.robj[0].setContractStatus("Reservation not released");\n\t\t\n\t\t//run this code and check the following error appears\n\t\t//Exception in thread "main" java.lang.NullPointerException: Cannot invoke "Exec.requestVehicle(Reservation)" because "cl" is null\n\t\t//at RentalSystem.visitOffice(RentalSystem.java:18)\n\t\t//at TestDriver.main(TestDriver.java:62)\n\t\t\n\t\t//Step 7: resolve using a try-catch block to handle the NullPointerException\n\t\ttry\n\t\t{\n\t\t\trentalSystem.visitOffice(rentalSystem.robj[0]);\n\t\t}\n\t\tcatch(NullPointerException e)\n\t\t{\n\t\t\tSystem.out.println("wait for exec to be assigned");\n\t\t}\t\t\n\t}\t\n\t\n\tpublic static <T extends Person> int countPersonWithEmail(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n\t\tfor(T a: alist)\n\t\t{\n\t\t\tif(a.getEmail()!=null)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static <T extends Person> int countPersonWithPhone(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n\t\tfor(T a: alist)\n\t\t{\n\t\t\tif(a.getPhone()!=0L && a.getPhone()!=999999999L)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static int countCustomer(ArrayList<? super Customer> alist)\n\t{\n\t\tint count=0;\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tif(a instanceof Customer)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static int countExec(ArrayList<? super Exec> alist)\n\t{\n\t\tint count=0;\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tif(a instanceof Exec)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static <T extends Person> void displayAll(ArrayList<T> alist)\n\t{\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tSystem.out.println(a.toString());\n\t\t}\n\t}\t\n\t\n\tpublic static <T extends Person> ArrayList<T> addEmailList(ArrayList<T> alist)\n\t{\n\t\tArrayList<T> newList = new ArrayList<>();\n\t\tfor(T a:alist)\n\t\t\tnewList.add(a.addEmail());\n\t\treturn newList;\n\t}\n\n\n    public static <T extends Person> ArrayList<T> addEmailList(ArrayList<T> alist)\n\t{\n        ArrayList<T> newList = new ArrayList<>();\n            ',-1))),Rn=yn((()=>(0,o._)("br",null,null,-1))),Wn=yn((()=>(0,o._)("p",{id:"comment"},"//Write a for loop based on the generic 'T'",-1))),Fn=yn((()=>(0,o._)("br",null,null,-1))),Un=yn((()=>(0,o._)("br",null,null,-1))),Vn=yn((()=>(0,o._)("pre",null,'\t\t\timport java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\t\t\n\t\t//step:1 create a person object and initialize with a customer and exec object\n\t\tArrayList<Person> pobj= new ArrayList<>();\n\t\tpobj.add(new Exec("EFG", "efg@gmail.com"));\n\t\tpobj.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj.add(new Customer("DEF", 8654678976L));\n\t\tpobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(pobj);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Customer> pobj1= new ArrayList<();\n\t\tpobj1.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj1.add(new Customer("DEF", 8654678976L));\n\t\tpobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(pobj1);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Exec> pobj2= new ArrayList<>();\n\t\tpobj2.add(new Exec("ABC1", "abc1@gmail.com"));\n\t\tpobj2.add(new Exec("DEF1", 8654678976L));\n\t\tpobj2.add(new Exec("GHI1", "ghi1@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Exec: [");\n\t\tdisplayAll(pobj2);\n\t\tSystem.out.println("]");\n\t\t\n\t\tSystem.out.println("Count of persons with Email : " +countPersonWithEmail(pobj));\n\t\tSystem.out.println("Count of persons with Phone : " +countPersonWithPhone(pobj));\n\t\tSystem.out.println("Count of Customer with Email : " +countPersonWithEmail(pobj1));\n\t\tSystem.out.println("Count of Customer with Phone : " +countPersonWithPhone(pobj1));\n\t\tSystem.out.println("Count of Exec with Email : " +countPersonWithEmail(pobj2));\n\t\tSystem.out.println("Count of Exec with Phone : " +countPersonWithPhone(pobj2));\n\t\t\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj));\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj1));\n\t\t//System.out.println("Count of Customers in the list : " +countCustomer(pobj2));//compiler error\n\t\t\n\t\tSystem.out.println("Count of Execs in the list : " +countExec(pobj));\n\t\t//System.out.println("Count of Execs in the list : " +countExec(pobj1)); //compiler error\n\t\tSystem.out.println("Count of Execs in the list : " +countExec(pobj2));\n\t\t\n\t\tArrayList<Person> a = addEmailList(pobj);\n\t\tArrayList<Customer> b = addEmailList(pobj1);\n\t\tArrayList<Exec> c = addEmailList(pobj2);\n\t\t\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(a);\n\t\tSystem.out.println("]");\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(b);\n\t\tSystem.out.println("]");\n\t\tSystem.out.println("list of Exec: [");\n\t\tdisplayAll(c);\n\t\tSystem.out.println("]");\n\t\t\t\t\n\t\trentalSystem.execobj=new Exec[1];\t\t\n\t\t//step 2: initialize the exec object with pobj[0] and check\n\t\t//rentalSystem.execobj[0]=pobj.get(0); //compiler error due to type mismatch\n\t\t//step 3: type cast\n\t\t//rentalSystem.execobj[0]=(Exec)pobj.get(0); //no compiler error or runtime error\n\t\t\n\t\t//run the code and check to see the output\n\t\t//Vehicle is available, initiating contract..\n\t\t//Reservation released\n\t\t//Vehicle key handedover\n\t\t\n\t\t//step 4: initialize the exec object with pobj[1] and check\n\t\t//rentalSystem.execobj[0]=pobj.get(1); //compiler error due to type mismatch\n\t\t//step 5: type cast to Exec\n\t\t//rentalSystem.execobj[0]=(Exec)pobj.get(1); //no compiler error\n\t\t\n\t\t//run the code and check \n\t\t//the following runtime error appears\n\t\t//Exception in thread "main" java.lang.ClassCastException: class Customer cannot be cast to class Exec (Customer and Exec are in unnamed module of loader \'app\')\n\t\t//at TestDriver.main(TestDriver.java:23)\n\t\t\n\t\t//Step 6: resolve using try-catch block and instanceof method\t\n\t\ttry\n\t\t{\n\t\t\trentalSystem.execobj[0]=(Exec)pobj.get(1);\n\t\t}\n\t\tcatch(ClassCastException e)\n\t\t{\n\t\t\tif(pobj.get(1) instanceof Exec)\n\t\t\t\trentalSystem.execobj[0] =(Exec) pobj.get(1);\n\t\t}\n\t\t\n\t\t\n\t\trentalSystem.cobj= new Customer[3];\n\t\trentalSystem.cobj[0]=(Customer) pobj.get(1);\n\t\trentalSystem.cobj[1]=(Customer) pobj.get(2);\n\t\trentalSystem.cobj[2]=(Customer) pobj.get(3);\n\t\trentalSystem.cobj[0].setCity("Coimbatore");\n\t\trentalSystem.cobj[1].setCity("Coimbatore");\n\t\trentalSystem.cobj[2].setCity("Chennai");\n\t\t\n\t\trentalSystem.vobj = new Vehicle[1];\n\t\trentalSystem.vobj[0]=new Vehicle(1234);\n\t\t\n\t\trentalSystem.robj=new Reservation[1];\n\t\trentalSystem.robj[0]= new Reservation(rentalSystem.cobj[0],rentalSystem.vobj[0]);\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd");\n        Date d = sdformat.parse("2022-02-29");\n\t\trentalSystem.robj[0].setBookingDate(d);\n\t\trentalSystem.robj[0].setContractStatus("Reservation not released");\n\t\t\n\t\t//run this code and check the following error appears\n\t\t//Exception in thread "main" java.lang.NullPointerException: Cannot invoke "Exec.requestVehicle(Reservation)" because "cl" is null\n\t\t//at RentalSystem.visitOffice(RentalSystem.java:18)\n\t\t//at TestDriver.main(TestDriver.java:62)\n\t\t\n\t\t//Step 7: resolve using a try-catch block to handle the NullPointerException\n\t\ttry\n\t\t{\n\t\t\trentalSystem.visitOffice(rentalSystem.robj[0]);\n\t\t}\n\t\tcatch(NullPointerException e)\n\t\t{\n\t\t\tSystem.out.println("wait for exec to be assigned");\n\t\t}\t\t\n\t}\t\n\t\n\tpublic static <T extends Person> int countPersonWithEmail(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n\t\tfor(T a: alist)\n\t\t{\n\t\t\tif(a.getEmail()!=null)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static <T extends Person> int countPersonWithPhone(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n\t\tfor(T a: alist)\n\t\t{\n\t\t\tif(a.getPhone()!=0L && a.getPhone()!=999999999L)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static int countCustomer(ArrayList<? super Customer> alist)\n\t{\n\t\tint count=0;\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tif(a instanceof Customer)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static int countExec(ArrayList<? super Exec> alist)\n\t{\n\t\tint count=0;\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tif(a instanceof Exec)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static <T extends Person> void displayAll(ArrayList<T> alist)\n\t{\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tSystem.out.println(a.toString());\n\t\t}\n\t}\t\n\t\n\tpublic static <T extends Person> ArrayList<T> addEmailList(ArrayList<T> alist)\n\t{\n\t\tArrayList<T> newList = new ArrayList<>();\n\t\tfor(T a:alist)\n\t\t\tnewList.add(a.addEmail());\n\t\treturn newList;\n\t}\n\t\n}\n',-1))),Bn=[Vn];function Mn(t,n,e,r,a,l){return(0,o.wg)(),(0,o.iD)("main",hn,[Cn,(0,o._)("div",gn,[(0,o._)("div",jn,[xn,((0,o.wg)(),(0,o.j4)((0,o.LL)(a.currentComponent)))])]),(0,o._)("div",fn,[(0,o._)("div",Sn,[(0,o._)("div",vn,[En,(0,o._)("div",wn,[(0,o._)("button",{style:(0,i.j5)([{float:"right",width:"80px","margin-bottom":"30px"},{display:a.display[0]}]),onClick:n[0]||(n[0]=t=>l.popup("arrayListComponent")),class:"button-30"},"Help",4),(0,o._)("button",{style:(0,i.j5)([{float:"right",width:"80px","margin-bottom":"30px"},{display:a.display[1]}]),onClick:n[1]||(n[1]=t=>l.popup("objectCreationComponent")),class:"button-30"},"Help",4),(0,o._)("button",{style:(0,i.j5)([{float:"right",width:"80px","margin-bottom":"30px"},{display:a.display[2]}]),onClick:n[2]||(n[2]=t=>l.popup("objectCreationComponent")),class:"button-30"},"Help",4)])]),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,i.j5)({display:a.display[0]})},[_n,(0,o.Uk)("    public static <T "),(0,o.wy)((0,o._)("input",{spellcheck:"false",id:"one",maxlength:"7",style:{width:"90px"},"onUpdate:modelValue":n[3]||(n[3]=n=>t.one=n)},null,512),[[s.nr,t.one]]),(0,o.Uk)(" Person> "),(0,o.wy)((0,o._)("input",{spellcheck:"false",id:"two",maxlength:"9",style:{width:"100px"},"onUpdate:modelValue":n[4]||(n[4]=n=>t.two=n)},null,512),[[s.nr,t.two]]),(0,o.Uk)(" <T> addEmailList(ArrayList>T> alist) "),kn,(0,o.Uk)("   { "),Pn,Ln,(0,o.Uk)(" } "),Tn,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[5]||(n[5]=t=>l.validate_one())},(0,i.zw)(a.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,i.j5)({display:a.display[1]})},[Dn,(0,o.Uk)("      ArrayList<"),(0,o.wy)((0,o._)("input",{spellcheck:"false",id:"three",maxlength:"1",style:{width:"40px"},"onUpdate:modelValue":n[6]||(n[6]=n=>t.three=n)},null,512),[[s.nr,t.three]]),(0,o.Uk)("> newList = new ArrayList<>(); "),An,Nn,(0,o.Uk)(" } "),In,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[7]||(n[7]=t=>l.validate_two())},(0,i.zw)(a.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,i.j5)({display:a.display[2]})},[On,(0,o.Uk)("      for("),(0,o.wy)((0,o._)("input",{spellcheck:"false",id:"four",maxlength:"1",style:{width:"40px"},"onUpdate:modelValue":n[8]||(n[8]=n=>t.four=n)},null,512),[[s.nr,t.four]]),(0,o.Uk)(" a:alist) "),Rn,(0,o.Uk)("       newlist.add(a.addEmail()); "),Wn,Fn,(0,o.Uk)(" } "),Un,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[9]||(n[9]=t=>l.validate_three())},(0,i.zw)(a.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,i.j5)({display:a.display[3]})},Bn,4)])])])}var Hn={components:{abstractComponent:R["default"],arrayListComponent:W["default"],classCastExceptionComponent:U["default"],constructorWritingComponent:V["default"],dateComponent:B["default"],extendsComponent:M["default"],functionCallingWithObjectComponent:H["default"],getterComponent:G["default"],interfaceComponent:z["default"],newVariableComponent:Z["default"],nullPointerExceptionComponent:q["default"],objectCreationComponent:K["default"],parseExceptionComponent:$["default"],passingArgumentsToFunctionsComponent:Y["default"],printFunctionComponent:J["default"],setterComponent:Q["default"],stringCompareComponent:X["default"],superKeywordComponent:tt["default"],thisComponent:nt["default"],tryCatchComponent:et["default"]},methods:{popup(t){this.currentComponent=t,console.log("popup");var n=document.getElementById("myModal");console.log(n);var e=document.getElementsByClassName("close")[0];n.style.display="block",console.log(n.style.display),e.onclick=function(){n.style.display="none"},window.onclick=function(t){t.target==n&&(n.style.display="none")}},correct1(){var t=document.getElementById("snackbar");t.innerHTML="Correct",t.style.backgroundColor="green",t.className="show",setTimeout((function(){t.className=t.className.replace("show","")}),3e3)},incorrect(){var t=document.getElementById("snackbar");t.innerHTML="Inorrect. Try again",t.style.backgroundColor="red",t.className="show",setTimeout((function(){t.className=t.className.replace("show","")}),3e3)},validate_one(){console.log(this.one,this.two),"extends"==this.one&&"ArrayList"==this.two?(this.correct1(),this.display[0]="none",this.display[1]="block"):this.incorrect()},validate_two(){"T"===this.three.trim()?(this.correct1(),this.display[1]="none",this.display[2]="block"):this.incorrect()},validate_three(){"execobj"==this.five&&"Exec"==this.six?(this.correct1(),this.display[2]="none",this.display[3]="block"):this.incorrect()},validate_four(){"Exec"==this.seven&&"pobj"===this.eight&&"getPerson"==this.nine?(this.correct1(),this.display[3]="none",this.display[4]="block"):this.incorrect()},validate_five(){"cobj"==this.ten&&"Customer"==this.eleven?(this.correct1(),this.display[4]="none",this.display[5]="block"):this.incorrect()},validate_six(){"Customer"==this.twelve&&"pobj"==this.thirteen&&"getPerson"==this.fourteen?(this.correct1(),this.display[5]="none",this.display[6]="block"):this.incorrect()},validate_seven(){"setCity"==this.fifteen?(this.correct1(),this.display[6]="none",this.display[7]="block"):this.incorrect()},validate_eight(){"Vehicle"==this.sixteen?(this.correct1(),this.display[7]="none",this.display[8]="block"):this.incorrect()},validate_nine(){"Reservation"==this.seventeen?(this.correct1(),this.display[8]="none",this.display[9]="block"):this.incorrect()},validate_ten(){"setBookingDate"==this.eighteen&&"d"==this.nineteen?(this.correct1(),this.display[9]="none",this.display[10]="block"):this.incorrect()},validate_eleven(){"setContractStatus"==this.twenty?(this.correct1(),this.display[10]="none",this.display[11]="block"):this.incorrect()},validate_twelve(){"visitOffice"==this.twentyone&&"robj"===this.twentytwo?(this.correct1(),this.display[11]="none",this.display[12]="block",this.$emit("testdriver-complete",!0)):this.incorrect()}},data(){return{id:"container",class:"wrapper",currentComponent:"constructorWritingComponent",button_value:"Next",button_text:"Incorrect. Try again",button_text_right:"Correct. Next",correct:!1,display:["block","none","none","none","none","none","none","none","none","none","none","none","none","none","none"]}}};const Gn=(0,mt.Z)(Hn,[["render",Mn],["__scopeId","data-v-1dbecf87"]]);var zn=Gn,Zn={components:{ThreeClerkComponent:dt,OneClassComponent:bt.Z,ThreeCustomerComponent:Vt,ThreePersonComponent:mn,OneReservationComponent:Bt.Z,OneVehicleComponent:pn.Z,OneRentalSystemComponent:dn.Z,OneInstructionsComponent:bn.Z,ThreeTestDriverComponent:zn},data(){return{componentSelect:"OneInstructionsComponent",testDriveComplete:!1,personComplete:!1,customerComplete:!1,execComplete:!1}},methods:{testDriveCompleteFunc(t){this.testDriveComplete=!0,this.componentSelect="ThreePersonComponent"},personCompleteFunc(t){this.personComplete=!0,this.componentSelect="ThreeCustomerComponent"},customerCompleteFunc(t){this.customerComplete=!0,this.componentSelect="ThreeClerkComponent"},execCompleteFunc(t){this.execComplete=!0,this.componentSelect="OneVehicleComponent"}}};const qn=(0,mt.Z)(Zn,[["render",p]]);var Kn=qn}}]);
//# sourceMappingURL=494.9e5464bf.js.map