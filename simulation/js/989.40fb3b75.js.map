{"version":3,"file":"js/989.40fb3b75.js","mappings":"4MAoDQA,MAAM,O,GACLA,MAAM,W,GAyCNC,GAAG,UAAUD,MAAM,Y,8DA1C1BE,EAAAA,EAAAA,GAuCO,OAvCPC,EAuCO,EAtCLD,EAAAA,EAAAA,GA6BM,MA7BNE,EA6BM,EA5BJF,EAAAA,EAAAA,GAES,UAFAG,QAAK,eAAEC,EAAAA,gBAAkB,4BACzBC,OAAK,QAAsB,6BAApBD,EAAAA,gBAAiD,4BAA8B,KAAI,mBACnG,IACAJ,EAAAA,EAAAA,GAES,UAFAG,QAAK,eAAEC,EAAAA,gBAAkB,sBACzBC,OAAK,QAAsB,uBAApBD,EAAAA,gBAA2C,4BAA8B,KAAI,aAC7F,IACAJ,EAAAA,EAAAA,GAES,UAFAG,QAAK,eAAEC,EAAAA,gBAAkB,qBACzBC,OAAK,QAAsB,sBAApBD,EAAAA,gBAA0C,4BAA8B,KAAI,WAC5F,IACAJ,EAAAA,EAAAA,GAES,UAFAG,QAAK,eAAEC,EAAAA,gBAAkB,wBACzBC,OAAK,QAAsB,yBAApBD,EAAAA,gBAA6C,4BAA8B,KAAI,eAC/F,IACAJ,EAAAA,EAAAA,GAES,UAFAG,QAAK,eAAEC,EAAAA,gBAAkB,uBACzBC,OAAK,QAAsB,wBAApBD,EAAAA,gBAA4C,4BAA8B,KAAI,cAC9F,IACAJ,EAAAA,EAAAA,GAES,UAFAG,QAAK,eAAEC,EAAAA,gBAAkB,2BACzBC,OAAK,QAAsB,4BAApBD,EAAAA,gBAAgD,4BAA8B,KAAI,kBAClG,IACAJ,EAAAA,EAAAA,GAES,UAFAG,QAAK,eAAEC,EAAAA,gBAAkB,4BACzBC,OAAK,QAAsB,6BAApBD,EAAAA,gBAAiD,4BAA8B,KAAI,oBACnG,IACAJ,EAAAA,EAAAA,GAES,UAFAG,QAAK,eAAEC,EAAAA,gBAAkB,0BACzBC,OAAK,QAAsB,2BAApBD,EAAAA,gBAA+C,4BAA8B,KAAI,kBACjG,IACAJ,EAAAA,EAAAA,GAES,UAFAG,QAAK,eAAEC,EAAAA,gBAAkB,qBACzBC,OAAK,QAAsB,sBAApBD,EAAAA,gBAA0C,4BAA8B,KAAI,oBAC5F,kBAIFE,EAAAA,EAAAA,IAMYC,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,EAAAA,OALVD,EAAAA,EAAAA,KAIEE,EAAAA,EAAAA,IADaJ,EAAAA,iBAAe,CAFzBK,mBAAmBC,EAAAA,yBACnBC,aAAaD,EAAAA,4B,oEAMtBV,EAAAA,EAAAA,GAIS,gBAHPA,EAAAA,EAAAA,GAEM,MAFNY,EAEM,EADJZ,EAAAA,EAAAA,GAA+E,UAAvEF,MAAM,UAAWK,QAAK,eAAEU,EAAAA,QAAQC,KAAK,sBAAqB,WAAI,YAF1DV,EAAAA,uBAAkB,G,mJCwE5BN,MAAM,O,UACVE,EAAAA,EAAAA,GAAiD,OAA5CD,GAAG,YAAW,4BAAwB,K,GAEzCA,GAAG,W,GACQD,MAAM,iB,UACTE,EAAAA,EAAAA,GAAkC,QAA5BF,MAAM,SAAQ,KAAO,K,+mEAgChCA,MAAM,O,GACJA,MAAM,U,GACJO,MAAA,yC,UACHL,EAAAA,EAAAA,GAGI,OAHCK,MAAA,YAAc,EACnBL,EAAAA,EAAAA,GAAqF,MAAjFK,MAAA,yCAA4C,qCAClDL,EAAAA,EAAAA,GAAqJ,KAAlJK,MAAA,sCAAwC,4GAAsG,K,GAG5IA,MAAA,Y,UASHL,EAAAA,EAAAA,GAiGJ,WAjGS,4iHAiGf,K,UACUA,EAAAA,EAAAA,GAAI,qB,UAGJA,EAAAA,EAAAA,GAAI,qB,UACJA,EAAAA,EAAAA,GAAI,qB,UACJA,EAAAA,EAAAA,GAAkG,KAA/FD,GAAG,WAAU,kFAA8E,K,UAAIC,EAAAA,EAAAA,GAAI,qB,UACpGA,EAAAA,EAAAA,GAAI,qB,UAKNA,EAAAA,EAAAA,GAqGJ,WArGS,wpHAqGf,K,UACUA,EAAAA,EAAAA,GAAI,qB,UAEVA,EAAAA,EAAAA,GAAI,qB,UACNA,EAAAA,EAAAA,GAAI,qB,UAEJA,EAAAA,EAAAA,GAAI,qB,UACIA,EAAAA,EAAAA,GAAI,qB,UACJA,EAAAA,EAAAA,GAAI,qB,UACJA,EAAAA,EAAAA,GAA0H,KAAvHD,GAAG,WAAU,0GAAsG,K,UAAIC,EAAAA,EAAAA,GAAI,qB,UAC5HA,EAAAA,EAAAA,GAAI,qB,UAMNA,EAAAA,EAAAA,GA6GJ,WA7GS,wwHA6Gf,K,UACAA,EAAAA,EAAAA,GAAI,qB,UAGMA,EAAAA,EAAAA,GAAI,qB,UACJA,EAAAA,EAAAA,GAAI,qB,UACJA,EAAAA,EAAAA,GAAkG,KAA/FD,GAAG,WAAU,kFAA8E,K,UAAIC,EAAAA,EAAAA,GAAI,qB,UACpGA,EAAAA,EAAAA,GAAI,qB,WAKNA,EAAAA,EAAAA,GAmHJ,WAnHS,+4HAmHf,K,WACUA,EAAAA,EAAAA,GAAI,qB,WAEJA,EAAAA,EAAAA,GAAI,qB,WACPA,EAAAA,EAAAA,GAAI,qB,WACDA,EAAAA,EAAAA,GAAI,qB,WACVA,EAAAA,EAAAA,GAAI,qB,WACEA,EAAAA,EAAAA,GAA2D,KAAxDD,GAAG,WAAU,2CAAuC,K,WAAIC,EAAAA,EAAAA,GAAI,qB,WAC7DA,EAAAA,EAAAA,GAAI,qB,WAMNA,EAAAA,EAAAA,GA8HJ,WA9HS,ynIA8Hf,K,WACUA,EAAAA,EAAAA,GAAI,qB,WAEVA,EAAAA,EAAAA,GAAI,qB,WACJA,EAAAA,EAAAA,GAAI,qB,WACLA,EAAAA,EAAAA,GAAI,qB,WACHA,EAAAA,EAAAA,GAAI,qB,WACHA,EAAAA,EAAAA,GAAI,qB,WACHA,EAAAA,EAAAA,GAAI,qB,WACNA,EAAAA,EAAAA,GAAI,qB,WACEA,EAAAA,EAAAA,GAAI,qB,WACJA,EAAAA,EAAAA,GAAkK,KAA/JD,GAAG,WAAU,8IAA8I,K,WAAIC,EAAAA,EAAAA,GAAI,qB,WACpKA,EAAAA,EAAAA,GAAI,qB,WAKNA,EAAAA,EAAAA,GAkLJ,WAlLS,iqMAkLf,K,IAlLUe,I,2CAjqBRC,EAAAA,EAAAA,IAy1BO,OAz1BPf,EAy1BO,CAx1BLC,GAEHF,EAAAA,EAAAA,GAKe,MALfY,EAKe,EAJJZ,EAAAA,EAAAA,GAGM,MAHNiB,EAGM,CAFJC,IAAkC,WAClCZ,EAAAA,EAAAA,KAAwCE,EAAAA,EAAAA,IAAnBJ,EAAAA,wBAIlCe,GA2BGnB,EAAAA,EAAAA,GAmzBM,MAnzBNoB,EAmzBM,EAlzBJpB,EAAAA,EAAAA,GAizBM,MAjzBNqB,EAizBM,EAhzBJrB,EAAAA,EAAAA,GAUM,MAVNsB,EAUM,CATJC,GAKFvB,EAAAA,EAAAA,GAGM,MAHNwB,EAGM,EAFJxB,EAAAA,EAAAA,GAAmK,UAA3JK,OAAuD,SAAvD,oDAAuD,CAAAoB,QAAoBrB,EAAAA,QAAQ,MAAOD,QAAK,eAAEO,EAAAA,MAAM,qBAAqBZ,MAAM,aAAY,OAAI,IAC1JE,EAAAA,EAAAA,GAAmK,UAA3JK,OAAuD,SAAvD,oDAAuD,CAAAoB,QAAoBrB,EAAAA,QAAQ,MAAOD,QAAK,eAAEO,EAAAA,MAAM,qBAAqBZ,MAAM,aAAY,OAAI,QAM5JE,EAAAA,EAAAA,GA2GM,OA3GDF,MAAM,UAAUC,GAAG,UAAWM,OAAK,SAAAoB,QAAarB,EAAAA,QAAQ,M,CAC3DsB,EAkGAC,GAAI,qCACgB,gBAAiF,SAA1EC,WAAW,QAAQC,UAAU,I,qCAAahB,EAAAA,UAAS,GAAER,MAAA,gB,iBAAXQ,EAAAA,cAAS,QAAuB,sCAC5E,gBAAkF,SAA3Ee,WAAa,QAAQC,UAAU,I,qCAAahB,EAAAA,SAAQ,GAAER,MAAA,gB,iBAAVQ,EAAAA,aAAQ,QAAuB,OAAK,gBAAkF,SAA3Ee,WAAa,QAAQC,UAAU,I,qCAAahB,EAAAA,SAAQ,GAAER,MAAA,gB,iBAAVQ,EAAAA,aAAQ,QAAuB,cAClM,GAAI,oBACJ,GAAI,oBACJ,EAAkG,GAAI,eACpG,GACFb,EAAAA,EAAAA,GAAuF,UAA/EF,MAAM,WAAWC,GAAG,OAAQI,QAAK,eAAEO,EAAAA,kB,QAAoBN,EAAAA,cAAY,QAG7EJ,EAAAA,EAAAA,GAkHM,OAlHDF,MAAM,UAAUC,GAAG,UAAWM,OAAK,SAAAoB,QAAarB,EAAAA,QAAQ,M,CAC3D0B,EAsGAC,GAAI,oBACV,gBAAgF,SAAzEH,WAAW,QAAQC,UAAU,K,qCAAchB,EAAAA,OAAM,GAAER,MAAA,iB,iBAARQ,EAAAA,UAClDmB,GAAI,oBACN,GAAI,oBACJ,gBAAoF,SAA7EJ,WAAW,QAAQC,UAAU,K,qCAAchB,EAAAA,WAAU,GAAER,MAAA,iB,iBAAZQ,EAAAA,cAClDoB,GAAI,iCACI,GAAI,oBACJ,GAAI,gCACJ,EAA0H,GAAI,eAC5H,GACFjC,EAAAA,EAAAA,GAA0F,UAAlFF,MAAM,WAAWC,GAAG,OAAQI,QAAK,eAAEO,EAAAA,qB,QAAuBN,EAAAA,cAAY,QAIhFJ,EAAAA,EAAAA,GAuHM,OAvHDF,MAAM,UAAUC,GAAG,UAAWM,OAAK,SAAAoB,QAAarB,EAAAA,QAAQ,M,CAC3D8B,EA8GVC,GAAI,qCAC0B,gBAA4E,SAArEP,WAAW,QAAQC,UAAU,I,qCAAahB,EAAAA,KAAI,GAAER,MAAA,gB,iBAANQ,EAAAA,SAAI,QAAuB,sCACvE,gBAAgF,SAAzEe,WAAa,QAAQC,UAAU,I,uCAAahB,EAAAA,OAAM,GAAER,MAAA,gB,iBAARQ,EAAAA,WAAM,QAAuB,OAAK,gBAA+E,SAAxEe,WAAa,QAAQC,UAAU,I,uCAAahB,EAAAA,MAAK,GAAER,MAAA,gB,iBAAPQ,EAAAA,UAAK,QAAuB,cAC7L,GAAI,oBACJ,GAAI,oBACJ,EAAkG,GAAI,eACpG,GACFb,EAAAA,EAAAA,GAA0F,UAAlFF,MAAM,WAAWC,GAAG,OAAQI,QAAK,iBAAEO,EAAAA,qB,QAAuBN,EAAAA,cAAY,QAGhFJ,EAAAA,EAAAA,GA+HM,OA/HDF,MAAM,UAAUC,GAAG,UAAWM,OAAK,SAAAoB,QAAarB,EAAAA,QAAQ,M,CAC3DgC,GAoHAC,IAAI,yBACD,gBAA+E,SAAxET,WAAW,QAAQC,UAAU,K,uCAAchB,EAAAA,MAAK,GAAER,MAAA,iB,iBAAPQ,EAAAA,UAAK,QAAwB,aAAQ,gBAA8E,SAAvEe,WAAW,QAAQC,UAAU,K,uCAAchB,EAAAA,KAAI,GAAER,MAAA,iB,iBAANQ,EAAAA,SAAI,QAAwB,mBACxK,IAAI,sBACP,IAAI,+BACD,IAAI,sBACV,IAAI,+BACE,GAA2D,IAAI,eAC7D,IACFb,EAAAA,EAAAA,GAA4F,UAApFF,MAAM,WAAWC,GAAG,OAAQI,QAAK,iBAAEO,EAAAA,uB,QAAyBN,EAAAA,cAAY,QAIlFJ,EAAAA,EAAAA,GA6IM,OA7IDF,MAAM,UAAUC,GAAG,UAAWM,OAAK,SAAAoB,QAAarB,EAAAA,QAAQ,M,CAC3DkC,GA+HAC,IAAI,gEAC0C,gBAA8E,SAAvEX,WAAW,QAAQC,UAAU,I,uCAAahB,EAAAA,OAAM,GAAER,MAAA,gB,iBAARQ,EAAAA,WAAM,QAAuB,sBAClI,IAAI,qBACJ,IAAI,kCACL,IAAI,2BAA2D,gBAA8E,SAAvEe,WAAW,QAAQC,UAAU,I,uCAAahB,EAAAA,OAAM,GAAER,MAAA,gB,iBAARQ,EAAAA,WAAM,QAAuB,eAC5I,IAAI,uBACH,IAAI,6BAAuE,gBAA8E,SAAvEe,WAAW,QAAQC,UAAU,K,uCAAchB,EAAAA,MAAK,GAAER,MAAA,gB,iBAAPQ,EAAAA,UAAK,QAAuB,eACxJ,IAAI,gCACN,IAAI,uBACE,IAAI,gCACJ,GAAkK,IAAI,eACpK,IACFb,EAAAA,EAAAA,GAA4F,UAApFF,MAAM,WAAWC,GAAG,OAAQI,QAAK,iBAAEO,EAAAA,uB,QAAyBN,EAAAA,cAAY,QAGlFJ,EAAAA,EAAAA,GAoLM,OApLDF,MAAM,UAAUC,GAAG,UAAWM,OAAK,SAAAoB,QAAarB,EAAAA,QAAQ,M,2OAryBrE,IACCoC,WAAY,CACTC,kBAAiB,cACjBC,mBAAkB,cAClBC,4BAA2B,cAC3BC,4BAA2B,cAC3BC,cAAa,cACbC,iBAAgB,cAChBC,mCAAkC,cAClCC,gBAAe,cACfC,mBAAkB,cAClBC,qBAAoB,cACpBC,8BAA6B,cAC7BC,wBAAuB,cACvBC,wBAAuB,cACvBC,qCAAoC,cACpCC,uBAAsB,cACtBC,gBAAe,cACfC,uBAAsB,cACtBC,sBAAqB,cACrBC,cAAa,cACbC,kBAAiBA,GAAAA,YAEnBC,QAAS,CACVC,MAAMC,GACDC,KAAKC,iBAAmBF,EACxBG,QAAQC,IAAI,SACZ,IAAIC,EAAQC,SAASC,eAAe,WACpCJ,QAAQC,IAAIC,GACZ,IAAIG,EAAOF,SAASG,uBAAuB,SAAS,GAClDJ,EAAM/D,MAAMoB,QAAU,QACtByC,QAAQC,IAAIC,EAAM/D,MAAMoB,SAE1B8C,EAAKE,QAAU,WACbL,EAAM/D,MAAMoB,QAAU,MACxB,EAGAiD,OAAOD,QAAU,SAAUE,GACrBA,EAAMC,QAAUR,IAClBA,EAAM/D,MAAMoB,QAAU,OAE1B,CACF,EACAoD,WACE,IAAIC,EAAIT,SAASC,eAAe,YAChCQ,EAAEC,UAAY,UACdD,EAAEzE,MAAM2E,gBAAkB,QAC1BF,EAAEG,UAAY,OACdC,YAAW,WACTJ,EAAEG,UAAYH,EAAEG,UAAUE,QAAQ,OAAQ,GAC5C,GAAG,IACL,EACAC,YACE,IAAIN,EAAIT,SAASC,eAAe,YAChCQ,EAAEC,UAAY,uBACdD,EAAEzE,MAAM2E,gBAAkB,MAC1BF,EAAEG,UAAY,OACdC,YAAW,WACTJ,EAAEG,UAAYH,EAAEG,UAAUE,QAAQ,OAAQ,GAC5C,GAAG,IACL,EAEAE,eACwB,WAAlBrB,KAAKsB,WAA2C,aAAjBtB,KAAKuB,UAA2C,KAAhBvB,KAAKwB,UACtExB,KAAKa,WACLb,KAAKvC,QAAQ,GAAK,OAClBuC,KAAKvC,QAAQ,GAAK,SAElBuC,KAAKoB,WAET,EACAK,kBACqB,kBAAfzB,KAAK0B,QAAiD,0BAAnB1B,KAAK2B,YAC1C3B,KAAKa,WACLb,KAAKvC,QAAQ,GAAK,OAClBuC,KAAKvC,QAAQ,GAAK,SAElBuC,KAAKoB,WAET,EAEAQ,kBACmB,WAAb5B,KAAK6B,MAAoC,aAAf7B,KAAK8B,QAAqC,KAAZ9B,KAAK+B,OAC/D/B,KAAKa,WACLb,KAAKvC,QAAQ,GAAK,OAClBuC,KAAKvC,QAAQ,GAAK,SAElBuC,KAAKoB,WAET,EAEAY,oBACoB,gBAAdhC,KAAKiC,OAAwC,gBAAbjC,KAAKkC,MACvClC,KAAKa,WACLb,KAAKvC,QAAQ,GAAK,OAClBuC,KAAKvC,QAAQ,GAAK,SAElBuC,KAAKoB,WAET,EAEAe,oBACoB,SAAdnC,KAAKoC,QAAmC,UAAfpC,KAAKqC,QAAoC,cAAdrC,KAAKsC,OAC3DtC,KAAKa,WACLb,KAAKvC,QAAQ,GAAK,OAClBuC,KAAKvC,QAAQ,GAAK,QAClBuC,KAAKuC,MAAM,cAAc,IAEzBvC,KAAKoB,WAET,GAIFoB,OACE,MAAO,CACLzG,GAAI,YACJD,MAAO,UACPmE,iBAAkB,8BAClBwC,aAAc,OACdC,YAAa,uBACbC,kBAAmB,gBACnBC,SAAS,EACTC,MAAO,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAClDpF,QAAS,CAAC,QAAS,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAE9K,G,SCxJF,MAAMqF,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,UFUA,IACEtE,WAAY,CACVuE,kBAAiB,IACjBC,kBAAiB,IACjBC,qBAAoB,IACpBC,mBAAkB,IAClBC,wBAAuB,IACvBC,oBAAmB,IACnBC,yBAAwB,IACxBC,yBAAwB,IACxBC,uBAAsBA,IAGxBf,OACE,MAAO,CACLgB,gBAAiB,2BACjBC,oBAAoB,EAExB,EACA5D,QAAS,CACP6D,yBAAyBC,GACvBzD,QAAQC,IAAIwD,GACZ3D,KAAKwD,gBAAkB,wBACzB,EACAI,2BAA2BD,GACzB3D,KAAKyD,oBAAqB,EAC1BzD,KAAKwD,gBAAkB,mBACzB,IGvCJ,MAAM,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAASK,KAEpE,S","sources":["webpack://exp-10/./src/views/SecondView.vue","webpack://exp-10/./src/components/TwoTestDriverComponent.vue","webpack://exp-10/./src/components/TwoTestDriverComponent.vue?66c8","webpack://exp-10/./src/views/SecondView.vue?7c89"],"sourcesContent":["<!-- eslint-disable no-unused-vars -->\r\n<!--Designed & Developed by:\r\n   Nirmal K (@cyberwizard1001)⁶\r\n   Nitin Ravi (@nitinravi)\r\n   Ritwik M (@ritwik-m) &\r\n   Nalinadevi K (@knaldev)\r\nfor the Ministry of Education (MOE) virtual-labs project, Govt. Of India -->\r\n\r\n<script>\r\nimport OneClerkComponent from \"@/components/OneClerkComponent.vue\";\r\nimport OneClassComponent from \"../components/OneDiagramComponent.vue\";\r\nimport OneCustomerComponent from \"../components/OneCustomerComponent.vue\";\r\nimport OneReservationComponent from \"../components/OneReservationComponent.vue\";\r\nimport OnePersonComponent from \"../components/OnePersonComponent.vue\";\r\nimport OneVehicleComponent from \"../components/OneVehicleComponent.vue\";\r\nimport OneRentalSystemComponent from \"@/components/OneRentalSystemComponent.vue\";\r\nimport OneInstructionsComponent from \"../components/OneInstructionsComponent.vue\";\r\nimport TwoTestDriverComponent from \"@/components/TwoTestDriverComponent.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    OneClerkComponent,\r\n    OneClassComponent,\r\n    OneCustomerComponent,\r\n    OnePersonComponent,\r\n    OneReservationComponent,\r\n    OneVehicleComponent,\r\n    OneRentalSystemComponent,\r\n    OneInstructionsComponent,\r\n    TwoTestDriverComponent,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      componentSelect: \"OneInstructionsComponent\",\r\n      testDriverComplete: false\r\n    };\r\n  },\r\n  methods: {\r\n    instructionsReadCallback(value) {\r\n      console.log(value);\r\n      this.componentSelect = 'TwoTestDriverComponent'\r\n    },\r\n    testDriverCompleteCallback(value) {\r\n      this.testDriverComplete = true\r\n      this.componentSelect = 'OneClassComponent'\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<template>\r\n  <main class=\"app\">\r\n    <div class=\"buttons\">\r\n      <button @click=\"componentSelect = 'OneInstructionsComponent'\"\r\n              :style=\"componentSelect === 'OneInstructionsComponent' ? 'background-color: #55acee' : ''\">1. Instructions\r\n      </button>\r\n      <button @click=\"componentSelect = 'OnePersonComponent'\"\r\n              :style=\"componentSelect === 'OnePersonComponent' ? 'background-color: #55acee' : ''\">2. Person\r\n      </button>\r\n      <button @click=\"componentSelect = 'OneClerkComponent'\"\r\n              :style=\"componentSelect === 'OneClerkComponent' ? 'background-color: #55acee' : ''\">3. Exec\r\n      </button>\r\n      <button @click=\"componentSelect = 'OneCustomerComponent'\"\r\n              :style=\"componentSelect === 'OneCustomerComponent' ? 'background-color: #55acee' : ''\">4. Customer\r\n      </button>\r\n      <button @click=\"componentSelect = 'OneVehicleComponent'\"\r\n              :style=\"componentSelect === 'OneVehicleComponent' ? 'background-color: #55acee' : ''\">5. Vehicle\r\n      </button>\r\n      <button @click=\"componentSelect = 'OneReservationComponent'\"\r\n              :style=\"componentSelect === 'OneReservationComponent' ? 'background-color: #55acee' : ''\">6. Reservation\r\n      </button>\r\n      <button @click=\"componentSelect = 'OneRentalSystemComponent'\"\r\n              :style=\"componentSelect === 'OneRentalSystemComponent' ? 'background-color: #55acee' : ''\">7. Rental System\r\n      </button>\r\n      <button @click=\"componentSelect = 'TwoTestDriverComponent'\"\r\n              :style=\"componentSelect === 'TwoTestDriverComponent' ? 'background-color: #55acee' : ''\">8. Test Driver\r\n      </button>\r\n      <button @click=\"componentSelect = 'OneClassComponent'\"\r\n              :style=\"componentSelect === 'OneClassComponent' ? 'background-color: #55acee' : ''\">9. Class Diagram\r\n      </button>\r\n\r\n    </div>\r\n\r\n    <KeepAlive>\r\n      <component\r\n          @instructions-read=\"instructionsReadCallback\"\r\n          @test-driver=\"testDriverCompleteCallback\"\r\n          v-bind:is=\"componentSelect\"\r\n      />\r\n    </KeepAlive>\r\n  </main>\r\n  <!--eslint-disable-next-line vue/no-multiple-template-root-->\r\n  <footer v-show=\"testDriverComplete\">\r\n    <div id=\"buttons\" class=\"relative\">\r\n      <button class=\"navitem\" @click=\"$router.push('/congratulations')\">Next</button>\r\n    </div>\r\n  </footer>\r\n</template>\r\n\r\n<style>\r\n.app {\r\n  background-color: #f9fafe;\r\n  min-height: 1024px;\r\n}\r\n\r\nbutton {\r\n  margin-top: 30px;\r\n  border: none;\r\n  padding: 20px;\r\n  margin-left: 5px;\r\n  background-color: #2c3e50;\r\n  color: white;\r\n  width: 500px;\r\n}\r\n\r\nbutton:first-of-type {\r\n  margin-left: 30px;\r\n}\r\n\r\n.buttons {\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: nowrap;\r\n  justify-content: center;\r\n  margin-top: 0;\r\n}\r\n</style>\r\n ","<!-- eslint-disable no-constant-condition -->\r\n<!--Designed & Developed by:\r\n   Nirmal K (@cyberwizard1001)⁶\r\n   Nitin Ravi (@nitinravi)\r\n   Ritwik M (@ritwik-m) &\r\n   Nalinadevi K (@knaldev)\r\nfor the Ministry of Education (MOE) virtual-labs project, Govt. Of India -->\r\n\r\n<script>\r\n\r\nimport abstractComponent from \"../components/help/abstractComponent.vue\";\r\nimport arrayListComponent from \"../components/help/arrayListComponent.vue\";\r\nimport classCastExceptionComponent from \"../components/help/classCastExceptionComponent.vue\";\r\nimport constructorWritingComponent from \"../components/help/constructorWritingComponent.vue\";\r\nimport dateComponent from \"../components/help/dateComponent.vue\";\r\nimport extendsComponent from \"../components/help/extendsComponent.vue\";\r\nimport functionCallingWithObjectComponent from \"../components/help/functionCallingWithObjectComponent.vue\";\r\nimport getterComponent from \"../components/help/getterComponent.vue\";\r\nimport interfaceComponent from \"../components/help/interfaceComponent.vue\";\r\nimport newVariableComponent from \"../components/help/newVariableComponent.vue\";\r\nimport nullPointerExceptionComponent from \"../components/help/nullPointerExceptionComponent.vue\";\r\nimport objectCreationComponent from \"../components/help/objectCreationComponent.vue\";\r\nimport parseExceptionComponent from \"../components/help/parseExceptionComponent.vue\";\r\nimport passingArgumentsToFunctionsComponent from \"../components/help/passingArgumentsToFunctionsComponent.vue\";\r\nimport printFunctionComponent from \"../components/help/printFunctionComponent.vue\";\r\nimport setterComponent from \"../components/help/setterComponent.vue\";\r\nimport stringCompareComponent from \"../components/help/StringcompareComponent.vue\";\r\nimport superKeywordComponent from \"../components/help/superKeywordComponent.vue\";\r\nimport thisComponent from \"../components/help/thisComponent.vue\";\r\nimport tryCatchComponent from \"../components/help/tryCatchComponent.vue\";\r\n\r\n\r\nexport default {\r\n\tcomponents: {\r\n    abstractComponent,\r\n    arrayListComponent,\r\n    classCastExceptionComponent,\r\n    constructorWritingComponent,\r\n    dateComponent,\r\n    extendsComponent,\r\n    functionCallingWithObjectComponent,\r\n    getterComponent,\r\n    interfaceComponent,\r\n    newVariableComponent,\r\n    nullPointerExceptionComponent,\r\n    objectCreationComponent,\r\n    parseExceptionComponent,\r\n    passingArgumentsToFunctionsComponent,\r\n    printFunctionComponent,\r\n    setterComponent,\r\n    stringCompareComponent,\r\n    superKeywordComponent,\r\n    thisComponent,\r\n    tryCatchComponent,\r\n  },\r\n  methods: {\r\n\tpopup(chosenComponent) {\r\n      this.currentComponent = chosenComponent;\r\n      console.log(\"popup\")\r\n      var modal = document.getElementById(\"myModal\");\r\n      console.log(modal)\r\n      var span = document.getElementsByClassName(\"close\")[0];\r\n        modal.style.display = \"block\";\r\n        console.log(modal.style.display)\r\n      // When the user clicks on <span> (x), close the modal\r\n      span.onclick = function () {\r\n        modal.style.display = \"none\";\r\n      }\r\n\r\n      // When the user clicks anywhere outside of the modal, close it\r\n      window.onclick = function (event) {\r\n        if (event.target == modal) {\r\n          modal.style.display = \"none\";\r\n        }\r\n      }\r\n    },\r\n    correct1() {\r\n      var x = document.getElementById(\"snackbar\");\r\n      x.innerHTML = \"Correct\";\r\n      x.style.backgroundColor = \"green\";\r\n      x.className = \"show\";\r\n      setTimeout(function () {\r\n        x.className = x.className.replace(\"show\", \"\");\r\n      }, 3000)\r\n    },\r\n    incorrect() {\r\n      var x = document.getElementById(\"snackbar\");\r\n      x.innerHTML = \"Incorrect. Try again\";\r\n      x.style.backgroundColor = \"red\";\r\n      x.className = \"show\";\r\n      setTimeout(function () {\r\n        x.className = x.className.replace(\"show\", \"\");\r\n      }, 3000)\r\n    },\r\n    \r\n    validate_ten() {\r\n      if (this.seventeen == \"extends\" && this.eighteen == \"ArrayList\" && this.nineteen ==\"T\") {\r\n        this.correct1();\r\n        this.display[0] = \"none\";\r\n        this.display[1] = \"block\";\r\n      } else {\r\n        this.incorrect();\r\n      }\r\n    },\r\n    validate_eleven() {\r\n      if (this.twenty == \"for(T a:alist)\" && this.twenty_one == \"if(a.getEmail()!=null)\") {\r\n        this.correct1();\r\n        this.display[1] = \"none\";\r\n        this.display[2] = \"block\";\r\n      } else {\r\n        this.incorrect();\r\n      }\r\n    },\r\n\r\n    validate_twelve() {\r\n      if (this.ttwo == \"extends\" && this.tthree == \"ArrayList\" && this.tfour==\"T\") {\r\n        this.correct1();\r\n        this.display[2] = \"none\";\r\n        this.display[3] = \"block\";\r\n      } else {\r\n        this.incorrect();\r\n      }\r\n    },\r\n\r\n    validate_thirteen() {\r\n      if (this.tfive == \"a.getPhone()\" && this.tsix == \"a.getPhone()\") {\r\n        this.correct1();\r\n        this.display[3] = \"none\";\r\n        this.display[4] = \"block\";\r\n      } else {\r\n        this.incorrect();\r\n      }\r\n    },\r\n\r\n    validate_fourteen() {\r\n      if (this.tseven== \"super\" && this.teight == \"Object\" && this.tnine == \"instanceof\") {\r\n        this.correct1();\r\n        this.display[4] = \"none\";\r\n        this.display[5] = \"block\";\r\n        this.$emit('testDriver', true);\r\n      } else {\r\n        this.incorrect();\r\n      }\r\n    },\r\n  },\r\n\r\n\r\n  data() {\r\n    return {\r\n      id: 'container',\r\n      class: 'wrapper',\r\n      currentComponent: 'constructorWritingComponent',\r\n      button_value: 'Next',\r\n      button_text: \"Incorrect. Try again\",\r\n      button_text_right: \"Correct. Next\",\r\n      correct: false,\r\n      valid: [false, false, false, false, false, false, false],\r\n      display: [\"block\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\",\"none\", \"none\", \"none\", \"none\", \"none\", \"none\"]\r\n    }\r\n  }\r\n\r\n}\r\n\r\n</script>\r\n<template>\r\n  <main class=\"app\">\r\n    <div id=\"snackbar\">Some text some message..</div>\r\n\r\n\t<div id=\"myModal\">\r\n            <div class=\"modal-content\">\r\n              <span class=\"close\">&times;</span>\r\n              <component v-bind:is=currentComponent />\r\n            </div>\r\n          </div>\r\n\r\n\t<div class=\"column\" style=\"position:sticky; top: 22%; left: 65%; bottom: 10%; float: right\">\r\n      <div class=\"column\">\r\n        <div class=\"codebox\">\r\n          <h5>Test Driver: </h5>\r\n          <ul style=\"line-height: 125%;\">\r\n            <li>Write a TestDriver class that has a RentalSystem object.</li>\r\n            <li>Create an ArrayList of type Person and populate it with objects of type Exec and Customer as mentioned in the comments. </li>\r\n\t\t\t<li>Create an ArrayList of type Customer pobj1 and populate it with objects of type Customer as mentioned in the comments.</li>\r\n            <li>Create an ArrayList of type Exec pobj2 and populate it with objects of type Exec as mentioned.</li>\r\n            <li>Print the count of Person, Customer and Exec objects who have email IDs and phones.</li>\r\n            <li>Initialise the array with pobj[1], observe what happens, and type cast it to the correct type, understand the exception. </li>\r\n            <li>Write try-catch blocks  with appropriate exceptions to fix the errors.</li>\r\n            <li>Create a Customer array cobj and populate it with objects of type Customer.</li>\r\n            <li>Create a Vehicle array and populate it with a Vehicle object with regNum as 1234.</li>\r\n            <li>Create a date object d, and use it to call the setBookingDate function, and set the contract status to \"Reservation not released\"</li>\r\n            <li>Observe any errors that appear and write try-catch blocks to handle the same.</li>\r\n            <li>Call the visitOffice method by passing the correct object as parameter.</li>\r\n\t\t\t<li>Write a generic function to calculate the count of Persons with email.</li>\r\n\t\t\t<li>Write a generic function to calculate the count of Persons with phone.</li>\r\n\t\t\t<li>Write a generic function to calculate the count of all Customers.</li>\r\n\t\t\t<li>Write a generic function to calculate the count of all Execs.</li>\r\n\t\t\t<li>Write a generic function to display the details of all Persons.</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n \r\n    <div class=\"row\">\r\n      <div class=\"column\">\r\n        <div style=\"display: flex; flex-direction: row;\">\r\n          <div style=\"flex:5\">\r\n          <h1 style=\"padding: 25px; padding-bottom: 0px;\">Understanding Exception Handling</h1>\r\n        <p style=\"padding: 25px; padding-top: 0px\">Follow the instructions to identify exceptions that arise during runtime and learn how to handle them.</p>\r\n        </div>\r\n\r\n        <div style=\"flex: 1;\">\r\n          <button style=\"float: right; width: 80px; margin-bottom: 30px;\" :style=\"{ display: display[0] }\" @click=\"popup('extendsComponent')\" class=\"button-30\">Help</button>\r\n          <button style=\"float: right; width: 80px; margin-bottom: 30px;\" :style=\"{ display: display[2] }\" @click=\"popup('extendsComponent')\" class=\"button-30\">Help</button>\r\n        </div>\r\n        </div>\r\n        \r\n\r\n        \r\n        <div class=\"codebox\" id=\"codebox\" :style=\"{ display: display[0] }\">\r\n          <pre>\r\nimport java.util.Scanner;\r\nimport java.util.ArrayList;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.lang.*;\r\n\r\npublic class TestDriver {\r\n\t\r\n\tpublic static void main(String[] args) throws ParseException {\r\n\t\t// TODO Auto-generated method stub\r\n\t\t\r\n\t\tRentalSystem rentalSystem = new RentalSystem();\r\n\t\t\r\n\t\t//step:1 create a person object and initialize with a customer and exec object\r\n\t\tArrayList&lt;Person&gt; pobj= new ArrayList&lt;&gt;();\r\n\t\tpobj.add(new Exec(\"EFG\", \"efg@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Person: [\");\r\n\t\tdisplayAll(pobj);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Customer&gt; pobj1= new ArrayList&lt;&gt;();\r\n\t\tpobj1.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj1.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj1.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Customer: [\");\r\n\t\tdisplayAll(pobj1);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Exec&gt; pobj2= new ArrayList&lt;&gt;();\r\n\t\tpobj2.add(new Exec(\"ABC1\", \"abc1@gmail.com\"));\r\n\t\tpobj2.add(new Exec(\"DEF1\", 8654678976L));\r\n\t\tpobj2.add(new Exec(\"GHI1\", \"ghi1@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Exec: [\");\r\n\t\tdisplayAll(pobj2);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tSystem.out.println(\"Count of persons with Email : \" +countPersonWithEmail(pobj));\r\n\t\tSystem.out.println(\"Count of persons with Phone : \" +countPersonWithPhone(pobj));\r\n\t\tSystem.out.println(\"Count of Customer with Email : \" +countPersonWithEmail(pobj1));\r\n\t\tSystem.out.println(\"Count of Customer with Phone : \" +countPersonWithPhone(pobj1));\r\n\t\tSystem.out.println(\"Count of Exec with Email : \" +countPersonWithEmail(pobj2));\r\n\t\tSystem.out.println(\"Count of Exec with Phone : \" +countPersonWithPhone(pobj2));\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj));\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj1));\r\n\t\t\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Execs in the list : \" +countExec(pobj));\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Execs in the list : \" +countExec(pobj2));\r\n    \r\n\t\trentalSystem.execobj=new Exec[1];\t\t\r\n\t\t\r\n   \t\ttry\r\n\t\t{\r\n\t\t\trentalSystem.execobj[0]=(Exec)pobj.get(1);\r\n\t\t}\r\n\t\tcatch(ClassCastException e)\r\n\t\t{\r\n\t\t\tif(pobj.get(1) instanceof Exec)\r\n\t\t\t\trentalSystem.execobj[0] =(Exec) pobj.get(1);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\trentalSystem.cobj= new Customer[3];\r\n\t\trentalSystem.cobj[0]=(Customer) pobj.get(1);\r\n\t\trentalSystem.cobj[1]=(Customer) pobj.get(2);\r\n\t\trentalSystem.cobj[2]=(Customer) pobj.get(3);\r\n\t\trentalSystem.cobj[0].setCity(\"Coimbatore\");\r\n\t\trentalSystem.cobj[1].setCity(\"Coimbatore\");\r\n\t\trentalSystem.cobj[2].setCity(\"Chennai\");\r\n\t\t\r\n\t\trentalSystem.vobj = new Vehicle[1];\r\n\t\trentalSystem.vobj[0]=new Vehicle(1234);\r\n\t\t\r\n\t\trentalSystem.robj=new Reservation[1];\r\n\t\trentalSystem.robj[0]= new Reservation(rentalSystem.cobj[0],rentalSystem.vobj[0]);\r\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n    Date d = sdformat.parse(\"2022-02-29\");\r\n\t\trentalSystem.robj[0].setBookingDate(d);\r\n\t\trentalSystem.robj[0].setContractStatus(\"Reservation not released\");\r\n\t\t\r\n\t\t\r\n\t\ttry\r\n\t\t{\r\n\t\t\trentalSystem.visitOffice(rentalSystem.robj[0]);\r\n\t\t}\r\n\t\tcatch(NullPointerException e)\r\n\t\t{\r\n\t\t\tSystem.out.println(\"wait for exec to be assigned\");\r\n\t\t}\t\t\r\n\t}\t\r\n</pre>\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;\r\n          public static &lt;T <input spellcheck=\"false\" maxlength=\"7\" v-model=\"seventeen\" style=\"width: 80px;\">Person&gt;\r\n          int countPersonWithEmail(<input spellcheck = \"false\" maxlength=\"9\" v-model=\"eighteen\" style=\"width: 90px;\">&lt; <input spellcheck = \"false\" maxlength=\"1\" v-model=\"nineteen\" style=\"width: 30px;\"> &gt; alist)\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;{\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;}\r\n          <p id=\"comment\">//A generic T must extend Person class passing that into an ArrayList 'alist' </p><br>\r\n          } <br>\r\n          <button class=\"button-9\" id=\"btn1\" @click=\"validate_ten()\"> {{ button_value }}</button>\r\n        </div>\r\n\r\n        <div class=\"codebox\" id=\"codebox\" :style=\"{ display: display[1] }\">\r\n          <pre>\r\nimport java.util.Scanner;\r\nimport java.util.ArrayList;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.lang.*;\r\n\r\npublic class TestDriver {\r\n\t\r\n\tpublic static void main(String[] args) throws ParseException {\r\n\t\t// TODO Auto-generated method stub\r\n\t\t\r\n\t\tRentalSystem rentalSystem = new RentalSystem();\r\n\t\t\r\n\t\t//step:1 create a person object and initialize with a customer and exec object\r\n\t\tArrayList&lt;Person&gt; pobj= new ArrayList&lt;&gt;();\r\n\t\tpobj.add(new Exec(\"EFG\", \"efg@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Person: [\");\r\n\t\tdisplayAll(pobj);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Customer&gt; pobj1= new ArrayList&lt;&gt;();\r\n\t\tpobj1.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj1.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj1.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Customer: [\");\r\n\t\tdisplayAll(pobj1);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Exec&gt; pobj2= new ArrayList&lt;&gt;();\r\n\t\tpobj2.add(new Exec(\"ABC1\", \"abc1@gmail.com\"));\r\n\t\tpobj2.add(new Exec(\"DEF1\", 8654678976L));\r\n\t\tpobj2.add(new Exec(\"GHI1\", \"ghi1@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Exec: [\");\r\n\t\tdisplayAll(pobj2);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tSystem.out.println(\"Count of persons with Email : \" +countPersonWithEmail(pobj));\r\n\t\tSystem.out.println(\"Count of persons with Phone : \" +countPersonWithPhone(pobj));\r\n\t\tSystem.out.println(\"Count of Customer with Email : \" +countPersonWithEmail(pobj1));\r\n\t\tSystem.out.println(\"Count of Customer with Phone : \" +countPersonWithPhone(pobj1));\r\n\t\tSystem.out.println(\"Count of Exec with Email : \" +countPersonWithEmail(pobj2));\r\n\t\tSystem.out.println(\"Count of Exec with Phone : \" +countPersonWithPhone(pobj2));\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj));\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj1));\r\n\t\t\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Execs in the list : \" +countExec(pobj));\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Execs in the list : \" +countExec(pobj2));\r\n    \r\n\t\trentalSystem.execobj=new Exec[1];\t\t\r\n\t\t\r\n   \t\ttry\r\n\t\t{\r\n\t\t\trentalSystem.execobj[0]=(Exec)pobj.get(1);\r\n\t\t}\r\n\t\tcatch(ClassCastException e)\r\n\t\t{\r\n\t\t\tif(pobj.get(1) instanceof Exec)\r\n\t\t\t\trentalSystem.execobj[0] =(Exec) pobj.get(1);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\trentalSystem.cobj= new Customer[3];\r\n\t\trentalSystem.cobj[0]=(Customer) pobj.get(1);\r\n\t\trentalSystem.cobj[1]=(Customer) pobj.get(2);\r\n\t\trentalSystem.cobj[2]=(Customer) pobj.get(3);\r\n\t\trentalSystem.cobj[0].setCity(\"Coimbatore\");\r\n\t\trentalSystem.cobj[1].setCity(\"Coimbatore\");\r\n\t\trentalSystem.cobj[2].setCity(\"Chennai\");\r\n\t\t\r\n\t\trentalSystem.vobj = new Vehicle[1];\r\n\t\trentalSystem.vobj[0]=new Vehicle(1234);\r\n\t\t\r\n\t\trentalSystem.robj=new Reservation[1];\r\n\t\trentalSystem.robj[0]= new Reservation(rentalSystem.cobj[0],rentalSystem.vobj[0]);\r\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n    \tDate d = sdformat.parse(\"2022-02-29\");\r\n\t\trentalSystem.robj[0].setBookingDate(d);\r\n\t\trentalSystem.robj[0].setContractStatus(\"Reservation not released\");\r\n\t\t\r\n\t\t\r\n\t\ttry\r\n\t\t{\r\n\t\t\trentalSystem.visitOffice(rentalSystem.robj[0]);\r\n\t\t}\r\n\t\tcatch(NullPointerException e)\r\n\t\t{\r\n\t\t\tSystem.out.println(\"wait for exec to be assigned\");\r\n\t\t}\t\t\r\n\t}\t\r\n\r\n  public static &lt;T extends Person&gt; int countPersonWithEmail(ArrayList&lt;T&gt; alist)\r\n\t{\r\n\t\tint count=0;\r\n</pre>\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;\r\n\t\t  <input spellcheck=\"false\" maxlength=\"14\" v-model=\"twenty\" style=\"width: 105px;\">\r\n\t\t  <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;{\r\n\t\t<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;\r\n\t\t<input spellcheck=\"false\" maxlength=\"22\" v-model=\"twenty_one\" style=\"width: 150px;\">\r\n\t\t<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;count++;\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;}\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;return count;\r\n          <p id=\"comment\">//Fill the right loop and conditional statement such that when 'a' has no email the count increments. </p><br>\r\n          } <br>\r\n          <button class=\"button-9\" id=\"btn1\" @click=\"validate_eleven()\"> {{ button_value }}</button>\r\n        </div>\r\n        \r\n\r\n        <div class=\"codebox\" id=\"codebox\" :style=\"{ display: display[2] }\">\r\n          <pre>\r\nimport java.util.Scanner;\r\nimport java.util.ArrayList;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.lang.*;\r\n\r\npublic class TestDriver {\r\n\t\r\n\tpublic static void main(String[] args) throws ParseException {\r\n\t\t// TODO Auto-generated method stub\r\n\t\t\r\n\t\tRentalSystem rentalSystem = new RentalSystem();\r\n\t\t\r\n\t\t//step:1 create a person object and initialize with a customer and exec object\r\n\t\tArrayList&lt;Person&gt; pobj= new ArrayList&lt;&gt;();\r\n\t\tpobj.add(new Exec(\"EFG\", \"efg@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Person: [\");\r\n\t\tdisplayAll(pobj);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Customer&gt; pobj1= new ArrayList&lt;&gt;();\r\n\t\tpobj1.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj1.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj1.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Customer: [\");\r\n\t\tdisplayAll(pobj1);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Exec&gt; pobj2= new ArrayList&lt;&gt;();\r\n\t\tpobj2.add(new Exec(\"ABC1\", \"abc1@gmail.com\"));\r\n\t\tpobj2.add(new Exec(\"DEF1\", 8654678976L));\r\n\t\tpobj2.add(new Exec(\"GHI1\", \"ghi1@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Exec: [\");\r\n\t\tdisplayAll(pobj2);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tSystem.out.println(\"Count of persons with Email : \" +countPersonWithEmail(pobj));\r\n\t\tSystem.out.println(\"Count of persons with Phone : \" +countPersonWithPhone(pobj));\r\n\t\tSystem.out.println(\"Count of Customer with Email : \" +countPersonWithEmail(pobj1));\r\n\t\tSystem.out.println(\"Count of Customer with Phone : \" +countPersonWithPhone(pobj1));\r\n\t\tSystem.out.println(\"Count of Exec with Email : \" +countPersonWithEmail(pobj2));\r\n\t\tSystem.out.println(\"Count of Exec with Phone : \" +countPersonWithPhone(pobj2));\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj));\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj1));\r\n\t\t\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Execs in the list : \" +countExec(pobj));\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Execs in the list : \" +countExec(pobj2));\r\n    \r\n\t\trentalSystem.execobj=new Exec[1];\t\t\r\n\t\t\r\n   \t\ttry\r\n\t\t{\r\n\t\t\trentalSystem.execobj[0]=(Exec)pobj.get(1);\r\n\t\t}\r\n\t\tcatch(ClassCastException e)\r\n\t\t{\r\n\t\t\tif(pobj.get(1) instanceof Exec)\r\n\t\t\t\trentalSystem.execobj[0] =(Exec) pobj.get(1);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\trentalSystem.cobj= new Customer[3];\r\n\t\trentalSystem.cobj[0]=(Customer) pobj.get(1);\r\n\t\trentalSystem.cobj[1]=(Customer) pobj.get(2);\r\n\t\trentalSystem.cobj[2]=(Customer) pobj.get(3);\r\n\t\trentalSystem.cobj[0].setCity(\"Coimbatore\");\r\n\t\trentalSystem.cobj[1].setCity(\"Coimbatore\");\r\n\t\trentalSystem.cobj[2].setCity(\"Chennai\");\r\n\t\t\r\n\t\trentalSystem.vobj = new Vehicle[1];\r\n\t\trentalSystem.vobj[0]=new Vehicle(1234);\r\n\t\t\r\n\t\trentalSystem.robj=new Reservation[1];\r\n\t\trentalSystem.robj[0]= new Reservation(rentalSystem.cobj[0],rentalSystem.vobj[0]);\r\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n   \t\tDate d = sdformat.parse(\"2022-02-29\");\r\n\t\trentalSystem.robj[0].setBookingDate(d);\r\n\t\trentalSystem.robj[0].setContractStatus(\"Reservation not released\");\r\n\t\t\r\n\t\t\r\n\t\ttry\r\n\t\t{\r\n\t\t\trentalSystem.visitOffice(rentalSystem.robj[0]);\r\n\t\t}\r\n\t\tcatch(NullPointerException e)\r\n\t\t{\r\n\t\t\tSystem.out.println(\"wait for exec to be assigned\");\r\n\t\t}\t\t\r\n\t}\t\r\n\r\n\tpublic static &lt;T extends Person&gt; int countPersonWithEmail(ArrayList&lt;T&gt; alist)\r\n\t{\r\n\t\tint count=0;\r\n\t\tfor(T a: alist)\r\n\t\t{\r\n\t\t\tif(a.getEmail()!=null)\r\n\t\t\t\tcount++;\r\n\t\t}\r\n\t\treturn count;\r\n\t}\t\r\n\r\n</pre>\r\n<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;\r\n          public static &lt;T <input spellcheck=\"false\" maxlength=\"7\" v-model=\"ttwo\" style=\"width: 80px;\">Person&gt;\r\n          int countPersonWithPhone(<input spellcheck = \"false\" maxlength=\"9\" v-model=\"tthree\" style=\"width: 90px;\">&lt; <input spellcheck = \"false\" maxlength=\"1\" v-model=\"tfour\" style=\"width: 30px;\"> &gt; alist)\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;{\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;}\r\n          <p id=\"comment\">//A generic T must extend Person class passing that into an ArrayList 'alist' </p><br>\r\n          } <br>\r\n          <button class=\"button-9\" id=\"btn1\" @click=\"validate_twelve()\"> {{ button_value }}</button>\r\n        </div>\r\n\r\n        <div class=\"codebox\" id=\"codebox\" :style=\"{ display: display[3] }\">\r\n          <pre>\r\nimport java.util.Scanner;\r\nimport java.util.ArrayList;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.lang.*;\r\n\r\npublic class TestDriver {\r\n\t\r\n\tpublic static void main(String[] args) throws ParseException {\r\n\t\t// TODO Auto-generated method stub\r\n\t\t\r\n\t\tRentalSystem rentalSystem = new RentalSystem();\r\n\t\t\r\n\t\t//step:1 create a person object and initialize with a customer and exec object\r\n\t\tArrayList&lt;Person&gt; pobj= new ArrayList&lt;&gt;();\r\n\t\tpobj.add(new Exec(\"EFG\", \"efg@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Person: [\");\r\n\t\tdisplayAll(pobj);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Customer&gt; pobj1= new ArrayList&lt;&gt;();\r\n\t\tpobj1.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj1.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj1.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Customer: [\");\r\n\t\tdisplayAll(pobj1);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Exec&gt; pobj2= new ArrayList&lt;&gt;();\r\n\t\tpobj2.add(new Exec(\"ABC1\", \"abc1@gmail.com\"));\r\n\t\tpobj2.add(new Exec(\"DEF1\", 8654678976L));\r\n\t\tpobj2.add(new Exec(\"GHI1\", \"ghi1@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Exec: [\");\r\n\t\tdisplayAll(pobj2);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tSystem.out.println(\"Count of persons with Email : \" +countPersonWithEmail(pobj));\r\n\t\tSystem.out.println(\"Count of persons with Phone : \" +countPersonWithPhone(pobj));\r\n\t\tSystem.out.println(\"Count of Customer with Email : \" +countPersonWithEmail(pobj1));\r\n\t\tSystem.out.println(\"Count of Customer with Phone : \" +countPersonWithPhone(pobj1));\r\n\t\tSystem.out.println(\"Count of Exec with Email : \" +countPersonWithEmail(pobj2));\r\n\t\tSystem.out.println(\"Count of Exec with Phone : \" +countPersonWithPhone(pobj2));\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj));\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj1));\r\n\t\t\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Execs in the list : \" +countExec(pobj));\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Execs in the list : \" +countExec(pobj2));\r\n    \r\n\t\trentalSystem.execobj=new Exec[1];\t\t\r\n\t\t\r\n    \ttry\r\n\t\t{\r\n\t\t\trentalSystem.execobj[0]=(Exec)pobj.get(1);\r\n\t\t}\r\n\t\tcatch(ClassCastException e)\r\n\t\t{\r\n\t\t\tif(pobj.get(1) instanceof Exec)\r\n\t\t\t\trentalSystem.execobj[0] =(Exec) pobj.get(1);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\trentalSystem.cobj= new Customer[3];\r\n\t\trentalSystem.cobj[0]=(Customer) pobj.get(1);\r\n\t\trentalSystem.cobj[1]=(Customer) pobj.get(2);\r\n\t\trentalSystem.cobj[2]=(Customer) pobj.get(3);\r\n\t\trentalSystem.cobj[0].setCity(\"Coimbatore\");\r\n\t\trentalSystem.cobj[1].setCity(\"Coimbatore\");\r\n\t\trentalSystem.cobj[2].setCity(\"Chennai\");\r\n\t\t\r\n\t\trentalSystem.vobj = new Vehicle[1];\r\n\t\trentalSystem.vobj[0]=new Vehicle(1234);\r\n\t\t\r\n\t\trentalSystem.robj=new Reservation[1];\r\n\t\trentalSystem.robj[0]= new Reservation(rentalSystem.cobj[0],rentalSystem.vobj[0]);\r\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n   \t\tDate d = sdformat.parse(\"2022-02-29\");\r\n\t\trentalSystem.robj[0].setBookingDate(d);\r\n\t\trentalSystem.robj[0].setContractStatus(\"Reservation not released\");\r\n\t\t\r\n\t\t\r\n\t\ttry\r\n\t\t{\r\n\t\t\trentalSystem.visitOffice(rentalSystem.robj[0]);\r\n\t\t}\r\n\t\tcatch(NullPointerException e)\r\n\t\t{\r\n\t\t\tSystem.out.println(\"wait for exec to be assigned\");\r\n\t\t}\t\t\r\n\t}\t\r\n\r\n\tpublic static &lt;T extends Person&gt; int countPersonWithEmail(ArrayList&lt;T&gt; alist)\r\n\t{\r\n\t\tint count=0;\r\n\t\tfor(T a: alist)\r\n\t\t{\r\n\t\t\tif(a.getEmail()!=null)\r\n\t\t\t\tcount++;\r\n\t\t}\r\n\t\treturn count;\r\n\t}\t\r\n\r\n\tpublic static &lt;T extends Person&gt; int countPersonWithPhone(ArrayList&lt;T&gt; alist)\r\n\t{\r\n\t\tint count=0;\r\n\t\tfor(T a: alist)\r\n\t\t{\t\r\n\r\n</pre>\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;\r\n          if(<input spellcheck=\"false\" maxlength=\"12\" v-model=\"tfive\" style=\"width: 105px;\">!=0L && <input spellcheck=\"false\" maxlength=\"12\" v-model=\"tsix\" style=\"width: 105px;\">!=0999999999L)\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;{\r\n\t\t\t\t\t  <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;count++;\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;}\r\n\t\t  <br>&emsp;&emsp;&emsp;&emsp;&emsp;return count;\r\n          <p id=\"comment\">//get the phone of 'a' for comparision </p><br>\r\n          } <br>\r\n          <button class=\"button-9\" id=\"btn1\" @click=\"validate_thirteen()\"> {{ button_value }}</button>\r\n          \r\n        </div>\r\n\r\n        <div class=\"codebox\" id=\"codebox\" :style=\"{ display: display[4] }\">\r\n          <pre>\r\nimport java.util.Scanner;\r\nimport java.util.ArrayList;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.lang.*;\r\n\r\npublic class TestDriver {\r\n\t\r\n\tpublic static void main(String[] args) throws ParseException {\r\n\t\t// TODO Auto-generated method stub\r\n\t\t\r\n\t\tRentalSystem rentalSystem = new RentalSystem();\r\n\t\t\r\n\t\t//step:1 create a person object and initialize with a customer and exec object\r\n\t\tArrayList&lt;Person&gt; pobj= new ArrayList&lt;&gt;();\r\n\t\tpobj.add(new Exec(\"EFG\", \"efg@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Person: [\");\r\n\t\tdisplayAll(pobj);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Customer&gt; pobj1= new ArrayList&lt;&gt;();\r\n\t\tpobj1.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj1.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj1.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Customer: [\");\r\n\t\tdisplayAll(pobj1);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Exec&gt; pobj2= new ArrayList&lt;&gt;();\r\n\t\tpobj2.add(new Exec(\"ABC1\", \"abc1@gmail.com\"));\r\n\t\tpobj2.add(new Exec(\"DEF1\", 8654678976L));\r\n\t\tpobj2.add(new Exec(\"GHI1\", \"ghi1@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Exec: [\");\r\n\t\tdisplayAll(pobj2);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tSystem.out.println(\"Count of persons with Email : \" +countPersonWithEmail(pobj));\r\n\t\tSystem.out.println(\"Count of persons with Phone : \" +countPersonWithPhone(pobj));\r\n\t\tSystem.out.println(\"Count of Customer with Email : \" +countPersonWithEmail(pobj1));\r\n\t\tSystem.out.println(\"Count of Customer with Phone : \" +countPersonWithPhone(pobj1));\r\n\t\tSystem.out.println(\"Count of Exec with Email : \" +countPersonWithEmail(pobj2));\r\n\t\tSystem.out.println(\"Count of Exec with Phone : \" +countPersonWithPhone(pobj2));\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj));\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj1));\r\n\t\t\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Execs in the list : \" +countExec(pobj));\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Execs in the list : \" +countExec(pobj2));\r\n    \r\n\t\trentalSystem.execobj=new Exec[1];\t\t\r\n\t\t\r\n    \ttry\r\n\t\t{\r\n\t\t\trentalSystem.execobj[0]=(Exec)pobj.get(1);\r\n\t\t}\r\n\t\tcatch(ClassCastException e)\r\n\t\t{\r\n\t\t\tif(pobj.get(1) instanceof Exec)\r\n\t\t\t\trentalSystem.execobj[0] =(Exec) pobj.get(1);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\trentalSystem.cobj= new Customer[3];\r\n\t\trentalSystem.cobj[0]=(Customer) pobj.get(1);\r\n\t\trentalSystem.cobj[1]=(Customer) pobj.get(2);\r\n\t\trentalSystem.cobj[2]=(Customer) pobj.get(3);\r\n\t\trentalSystem.cobj[0].setCity(\"Coimbatore\");\r\n\t\trentalSystem.cobj[1].setCity(\"Coimbatore\");\r\n\t\trentalSystem.cobj[2].setCity(\"Chennai\");\r\n\t\t\r\n\t\trentalSystem.vobj = new Vehicle[1];\r\n\t\trentalSystem.vobj[0]=new Vehicle(1234);\r\n\t\t\r\n\t\trentalSystem.robj=new Reservation[1];\r\n\t\trentalSystem.robj[0]= new Reservation(rentalSystem.cobj[0],rentalSystem.vobj[0]);\r\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n    \tDate d = sdformat.parse(\"2022-02-29\");\r\n\t\trentalSystem.robj[0].setBookingDate(d);\r\n\t\trentalSystem.robj[0].setContractStatus(\"Reservation not released\");\r\n\t\t\r\n\t\t\r\n\t\ttry\r\n\t\t{\r\n\t\t\trentalSystem.visitOffice(rentalSystem.robj[0]);\r\n\t\t}\r\n\t\tcatch(NullPointerException e)\r\n\t\t{\r\n\t\t\tSystem.out.println(\"wait for exec to be assigned\");\r\n\t\t}\t\t\r\n\t}\t\r\n\r\n\tpublic static &lt;T extends Person&gt; int countPersonWithEmail(ArrayList&lt;T&gt; alist)\r\n\t{\r\n\t\tint count=0;\r\n\t\tfor(T a: alist)\r\n\t\t{\r\n\t\t\tif(a.getEmail()!=null)\r\n\t\t\t\tcount++;\r\n\t\t}\r\n\t\treturn count;\r\n\t}\t\r\n\r\n\tpublic static &lt;T extends Person&gt; int countPersonWithPhone(ArrayList&lt;T&gt; alist)\r\n\t{\r\n\t\tint count=0;\r\n\t\tfor(T a: alist)\r\n\t\t{\r\n\t\t\tif(a.getPhone()!=0L && a.getPhone()!=999999999L)\r\n\t\t\t\tcount++;\r\n\t\t}\r\n\t\treturn count;\r\n\t}\t\r\n\t\r\n\tpublic static int countCustomer(ArrayList&lt;? super Customer&gt; alist)\r\n\t{\r\n\t\tint count=0;\r\n\t\tfor(Object a: alist)\r\n\t\t{\r\n\r\n</pre>\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;\r\n          public static int countCustomer(ArrayList&lt;?<input spellcheck=\"false\" maxlength=\"5\" v-model=\"tseven\" style=\"width: 45px;\"> Customer&gt; alist)\r\n\t\t  <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;{ \r\n\t\t  <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;int count=0;\r\n\t\t\t<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; for(<input spellcheck=\"false\" maxlength=\"6\" v-model=\"teight\" style=\"width: 55px;\"> a: alist)\r\n\t\t\t\t<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;{\r\n\t\t\t\t\t<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;if(a <input spellcheck=\"false\" maxlength=\"11\" v-model=\"tnine\" style=\"width: 85px;\"> Customer)\r\n\t\t\t\t\t\t<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;count++;\r\n\t\t\t\t<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;}\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;return count;\r\n          <p id=\"comment\">//1. Write the correct keyword to refer to parent.   2.Fill the right keyword for 'a'   3. Count increments if 'a' is an instance of Customer </p><br>\r\n          } <br>\r\n          <button class=\"button-9\" id=\"btn1\" @click=\"validate_fourteen()\"> {{ button_value }}</button>\r\n        </div>\r\n\r\n        <div class=\"codebox\" id=\"codebox\" :style=\"{ display: display[5] }\">\r\n          <pre>\r\nimport java.util.Scanner;\r\nimport java.util.ArrayList;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.lang.*;\r\n\r\npublic class TestDriver {\r\n\t\r\n\tpublic static void main(String[] args) throws ParseException {\r\n\t\t// TODO Auto-generated method stub\r\n\t\t\r\n\t\tRentalSystem rentalSystem = new RentalSystem();\r\n\t\t\r\n\t\t//step:1 create a person object and initialize with a customer and exec object\r\n\t\tArrayList&lt;Person&gt; pobj= new ArrayList&lt;&gt;();\r\n\t\tpobj.add(new Exec(\"EFG\", \"efg@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Person: [\");\r\n\t\tdisplayAll(pobj);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Customer&gt; pobj1= new ArrayList&lt;&gt;();\r\n\t\tpobj1.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj1.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj1.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Customer: [\");\r\n\t\tdisplayAll(pobj1);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Exec&gt; pobj2= new ArrayList&lt;&gt;();\r\n\t\tpobj2.add(new Exec(\"ABC1\", \"abc1@gmail.com\"));\r\n\t\tpobj2.add(new Exec(\"DEF1\", 8654678976L));\r\n\t\tpobj2.add(new Exec(\"GHI1\", \"ghi1@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Exec: [\");\r\n\t\tdisplayAll(pobj2);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tSystem.out.println(\"Count of persons with Email : \" +countPersonWithEmail(pobj));\r\n\t\tSystem.out.println(\"Count of persons with Phone : \" +countPersonWithPhone(pobj));\r\n\t\tSystem.out.println(\"Count of Customer with Email : \" +countPersonWithEmail(pobj1));\r\n\t\tSystem.out.println(\"Count of Customer with Phone : \" +countPersonWithPhone(pobj1));\r\n\t\tSystem.out.println(\"Count of Exec with Email : \" +countPersonWithEmail(pobj2));\r\n\t\tSystem.out.println(\"Count of Exec with Phone : \" +countPersonWithPhone(pobj2));\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj));\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj1));\r\n\t\t//System.out.println(\"Count of Customers in the list : \" +countCustomer(pobj2));//compiler error\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Execs in the list : \" +countExec(pobj));\r\n\t\t//System.out.println(\"Count of Execs in the list : \" +countExec(pobj1)); //compiler error\r\n\t\tSystem.out.println(\"Count of Execs in the list : \" +countExec(pobj2));\r\n\t\t\r\n\t\trentalSystem.execobj=new Exec[1];\t\t\r\n\t\t//step 2: initialize the exec object with pobj[0] and check\r\n\t\t//rentalSystem.execobj[0]=pobj.get(0); //compiler error due to type mismatch\r\n\t\t//step 3: type cast\r\n\t\t//rentalSystem.execobj[0]=(Exec)pobj.get(0); //no compiler error or runtime error\r\n\t\t\r\n\t\t//run the code and check to see the output\r\n\t\t//Vehicle is available, initiating contract..\r\n\t\t//Reservation released\r\n\t\t//Vehicle key handedover\r\n\t\t\r\n\t\t//step 4: initialize the exec object with pobj[1] and check\r\n\t\t//rentalSystem.execobj[0]=pobj.get(1); //compiler error due to type mismatch\r\n\t\t//step 5: type cast to Exec\r\n\t\t//rentalSystem.execobj[0]=(Exec)pobj.get(1); //no compiler error\r\n\t\t\r\n\t\t//run the code and check \r\n\t\t//the following runtime error appears\r\n\t\t//Exception in thread \"main\" java.lang.ClassCastException: \r\n    \t//class Customer cannot be cast to class Exec (Customer and Exec are in unnamed module of loader 'app')\r\n\t\t//at TestDriver.main(TestDriver.java:23)\r\n\t\t\r\n\t\t//Step 6: resolve using try-catch block and instanceof method\t\r\n\t\ttry\r\n\t\t{\r\n\t\t\trentalSystem.execobj[0]=(Exec)pobj.get(1);\r\n\t\t}\r\n\t\tcatch(ClassCastException e)\r\n\t\t{\r\n\t\t\tif(pobj.get(1) instanceof Exec)\r\n\t\t\t\trentalSystem.execobj[0] =(Exec) pobj.get(1);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\trentalSystem.cobj= new Customer[3];\r\n\t\trentalSystem.cobj[0]=(Customer) pobj.get(1);\r\n\t\trentalSystem.cobj[1]=(Customer) pobj.get(2);\r\n\t\trentalSystem.cobj[2]=(Customer) pobj.get(3);\r\n\t\trentalSystem.cobj[0].setCity(\"Coimbatore\");\r\n\t\trentalSystem.cobj[1].setCity(\"Coimbatore\");\r\n\t\trentalSystem.cobj[2].setCity(\"Chennai\");\r\n\t\t\r\n\t\trentalSystem.vobj = new Vehicle[1];\r\n\t\trentalSystem.vobj[0]=new Vehicle(1234);\r\n\t\t\r\n\t\trentalSystem.robj=new Reservation[1];\r\n\t\trentalSystem.robj[0]= new Reservation(rentalSystem.cobj[0],rentalSystem.vobj[0]);\r\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n    \tDate d = sdformat.parse(\"2022-02-29\");\r\n\t\trentalSystem.robj[0].setBookingDate(d);\r\n\t\trentalSystem.robj[0].setContractStatus(\"Reservation not released\");\r\n\t\t\r\n\t\t//run this code and check the following error appears\r\n\t\t//Exception in thread \"main\" java.lang.NullPointerException: \r\n    \t//Cannot invoke \"Exec.requestVehicle(Reservation)\" because \"cl\" is null\r\n\t\t//at RentalSystem.visitOffice(RentalSystem.java:18)\r\n\t\t//at TestDriver.main(TestDriver.java:62)\r\n\t\t\r\n\t\t//Step 7: resolve using a try-catch block to handle the NullPointerException\r\n\t\ttry\r\n\t\t{\r\n\t\t\trentalSystem.visitOffice(rentalSystem.robj[0]);\r\n\t\t}\r\n\t\tcatch(NullPointerException e)\r\n\t\t{\r\n\t\t\tSystem.out.println(\"wait for exec to be assigned\");\r\n\t\t}\t\t\r\n\t}\t\r\n\t\r\n\tpublic static &lt;T extends Person&gt; int countPersonWithEmail(ArrayList&lt;T&gt; alist)\r\n\t{\r\n\t\tint count=0;\r\n\t\tfor(T a: alist)\r\n\t\t{\r\n\t\t\tif(a.getEmail()!=null)\r\n\t\t\t\tcount++;\r\n\t\t}\r\n\t\treturn count;\r\n\t}\t\r\n\t\r\n\tpublic static &lt;T extends Person&gt; int countPersonWithPhone(ArrayList&lt;T&gt; alist)\r\n\t{\r\n\t\tint count=0;\r\n\t\tfor(T a: alist)\r\n\t\t{\r\n\t\t\tif(a.getPhone()!=0L && a.getPhone()!=999999999L)\r\n\t\t\t\tcount++;\r\n\t\t}\r\n\t\treturn count;\r\n\t}\t\r\n\t\r\n\tpublic static int countCustomer(ArrayList&lt;? super Customer&gt; alist)\r\n\t{\r\n\t\tint count=0;\r\n\t\tfor(Object a: alist)\r\n\t\t{\r\n\t\t\tif(a instanceof Customer)\r\n\t\t\t\tcount++;\r\n\t\t}\r\n\t\treturn count;\r\n\t}\t\r\n\t\r\n\tpublic static int countExec(ArrayList&lt;? super Exec&gt; alist)\r\n\t{\r\n\t\tint count=0;\r\n\t\tfor(Object a: alist)\r\n\t\t{\r\n\t\t\tif(a instanceof Exec)\r\n\t\t\t\tcount++;\r\n\t\t}\r\n\t\treturn count;\r\n\t}\t\r\n\t\r\n\tpublic static &lt;T extends Person&gt; void displayAll(ArrayList&lt;T&gt; alist)\r\n\t{\r\n\t\tfor(Object a: alist)\r\n\t\t{\r\n\t\t\tSystem.out.println(a.toString());\r\n\t\t}\r\n\t}\t\t\r\n}\r\n\r\n</pre>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  </main>\r\n</template>\r\n\r\n<style scoped>\r\n* {\r\n  box-sizing: border-box;\r\n  background-color: #F9FAFE;\r\n}\r\n\r\nh1,\r\nh2,\r\np {\r\n  font-family: sans-serif;\r\n  color: rgb(0, 3, 40);\r\n}\r\n\r\n.column {\r\n  float: left;\r\n  width: 50%;\r\n}\r\n\r\n/* Clear floats after the columns */\r\n.row:after {\r\n  content: \"\";\r\n  display: table;\r\n  clear: both;\r\n}\r\n\r\n.completed {\r\n  color: cadetblue;\r\n  text-decoration: line-through;\r\n}\r\n\r\n\r\nmark1 {\r\n  background-color: rgb(176, 230, 183);\r\n  box-shadow: 1px 6px 15px 2px rgb(160, 222, 159);\r\n  color: black;\r\n  border-radius: 10px;\r\n  padding-left: 12px;\r\n  padding-right: 12px;\r\n  padding-top: 6px;\r\n  padding-bottom: 6px;\r\n}\r\n\r\nmark0 {\r\n  box-shadow: 1px 6px 15px 2px rgb(249, 255, 191);\r\n  background-color: rgb(231, 238, 162);\r\n  color: black;\r\n  border-radius: 10px;\r\n  padding-left: 12px;\r\n  padding-right: 12px;\r\n  padding-top: 6px;\r\n  padding-bottom: 6px;\r\n}\r\n\r\n#comment {\r\n  margin-left: 15px;\r\n  font-style: italic;\r\n  color: gray;\r\n  font-size: small;\r\n}\r\n\r\n\r\n.codebox {\r\n  height: 80%;\r\n  width: fit-content;\r\n  min-width: 90%;\r\n  margin: 25px;\r\n  padding: 25px;\r\n  border-radius: 10px;\r\n  background-color: #F9FAFE;\r\n  box-shadow: 2px 3px 10px 2px #D7DFFF;\r\n}\r\n\r\ninput {\r\n  border: 1px solid #ccc;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  background-color: white;\r\n  color: black;\r\n}\r\n\r\n/* CSS */\r\n.button-9 {\r\n  appearance: button;\r\n  backface-visibility: hidden;\r\n  background-color: #405cf5;\r\n  border-radius: 6px;\r\n  border-width: 0;\r\n  box-shadow: rgba(50, 50, 93, .1) 0 0 0 1px inset, rgba(50, 50, 93, .1) 0 2px 5px 0, rgba(0, 0, 0, .07) 0 1px 1px 0;\r\n  box-sizing: border-box;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  font-family: -apple-system, system-ui, \"Segoe UI\", Roboto, \"Helvetica Neue\", Ubuntu, sans-serif;\r\n  font-size: 100%;\r\n  height: 44px;\r\n  line-height: 1.15;\r\n  margin: 12px 0 0;\r\n  outline: none;\r\n  overflow: hidden;\r\n  padding: 0 25px;\r\n  position: relative;\r\n  text-align: center;\r\n  text-transform: none;\r\n  transform: translateZ(0);\r\n  transition: all .2s, box-shadow .08s ease-in;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  touch-action: manipulation;\r\n  width: 200px;\r\n}\r\n\r\n.button-9:disabled {\r\n  cursor: default;\r\n}\r\n\r\n.button-9:focus {\r\n  box-shadow: rgba(50, 50, 93, .1) 0 0 0 1px inset, rgba(50, 50, 93, .2) 0 6px 15px 0, rgba(0, 0, 0, .1) 0 2px 2px 0, rgba(50, 151, 211, .3) 0 0 0 4px;\r\n}\r\n\r\n#snackbar {\r\n  visibility: hidden;\r\n  min-width: 250px;\r\n  margin-left: -125px;\r\n  background-color: #333;\r\n  color: #fff;\r\n  text-align: center;\r\n  border-radius: 2px;\r\n  padding: 16px;\r\n  position: fixed;\r\n  z-index: 1;\r\n  left: 50%;\r\n  bottom: 30px;\r\n  font-size: 17px;\r\n}\r\n\r\n#snackbar.show {\r\n  visibility: visible;\r\n  -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;\r\n  animation: fadein 0.5s, fadeout 0.5s 2.5s;\r\n}\r\n\r\n@-webkit-keyframes fadein {\r\n  from {\r\n    bottom: 0;\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    bottom: 30px;\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n@keyframes fadein {\r\n  from {\r\n    bottom: 0;\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    bottom: 30px;\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n@-webkit-keyframes fadeout {\r\n  from {\r\n    bottom: 30px;\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    bottom: 0;\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n@keyframes fadeout {\r\n  from {\r\n    bottom: 30px;\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    bottom: 0;\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.outbox {\r\n  height: fit-content;\r\n  min-height: 10vh;\r\n  width: 90%;\r\n  margin: 25px;\r\n  padding: 25px;\r\n  border-radius: 10px;\r\n  background-color: #202020;\r\n  color: red;\r\n  font-size: medium;\r\n  font-family: monospace;\r\n  font-weight: bold;\r\n  box-shadow: 2px 3px 10px 2px #D7DFFF;\r\n}\r\n\r\n.no-error {\r\n  color: white;\r\n}\r\n\r\n.outbox p {\r\n  background-color: inherit;\r\n  color: inherit;\r\n  font-size: inherit;\r\n  font-family: inherit;\r\n  font-weight: inherit;\r\n}\r\n\r\n.button-30 {\r\n  align-items: center;\r\n  appearance: none;\r\n  background-color: #FCFCFD;\r\n  border-radius: 4px;\r\n  border-width: 0;\r\n  box-shadow: rgba(45, 35, 66, 0.4) 0 2px 4px, rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #D6D6E7 0 -3px 0 inset;\r\n  box-sizing: border-box;\r\n  color: #36395A;\r\n  cursor: pointer;\r\n  display: inline-flex;\r\n  font-family: \"JetBrains Mono\", monospace;\r\n  height: 48px;\r\n  justify-content: center;\r\n  line-height: 1;\r\n  list-style: none;\r\n  overflow: hidden;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n  position: relative;\r\n  text-align: left;\r\n  text-decoration: none;\r\n  transition: box-shadow .15s, transform .15s;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  touch-action: manipulation;\r\n  white-space: nowrap;\r\n  will-change: box-shadow, transform;\r\n  font-size: 18px;\r\n}\r\n\r\n.button-30:focus {\r\n  box-shadow: #D6D6E7 0 0 0 1.5px inset, rgba(45, 35, 66, 0.4) 0 2px 4px, rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #D6D6E7 0 -3px 0 inset;\r\n}\r\n\r\n.button-30:hover {\r\n  box-shadow: rgba(45, 35, 66, 0.4) 0 4px 8px, rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #D6D6E7 0 -3px 0 inset;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.button-30:active {\r\n  box-shadow: #D6D6E7 0 3px 7px inset;\r\n  transform: translateY(2px);\r\n}\r\n\r\n#myModal {\r\n  display: none;\r\n  /* Hidden by default */\r\n  position: fixed;\r\n  /* Stay in place */\r\n  z-index: 1;\r\n  /* Sit on top */\r\n  padding-top: 100px;\r\n  /* Location of the box */\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  /* Full width */\r\n  height: 100%;\r\n  /* Full height */\r\n  overflow: auto;\r\n  /* Enable scroll if needed */\r\n  background-color: rgb(0, 0, 0);\r\n  /* Fallback color */\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  /* Black w/ opacity */\r\n}\r\n\r\n/* Modal Content */\r\n.modal-content {\r\n  background-color: #fefefe;\r\n  margin: auto;\r\n  padding: 20px;\r\n  border: 1px solid #888;\r\n  width: 80%;\r\n}\r\n\r\n/* The Close Button */\r\n.close {\r\n  color: #aaaaaa;\r\n  float: right;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n}\r\n\r\n.close:hover,\r\n.close:focus {\r\n  color: #000;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n}\r\n\r\n\r\n\r\n</style>\r\n","import { render } from \"./TwoTestDriverComponent.vue?vue&type=template&id=65be64ac&scoped=true\"\nimport script from \"./TwoTestDriverComponent.vue?vue&type=script&lang=js\"\nexport * from \"./TwoTestDriverComponent.vue?vue&type=script&lang=js\"\n\nimport \"./TwoTestDriverComponent.vue?vue&type=style&index=0&id=65be64ac&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\nirma\\\\Development\\\\virtuallab-oop\\\\exp-10\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-65be64ac\"]])\n\nexport default __exports__","import { render } from \"./SecondView.vue?vue&type=template&id=60a93e6c\"\nimport script from \"./SecondView.vue?vue&type=script&lang=js\"\nexport * from \"./SecondView.vue?vue&type=script&lang=js\"\n\nimport \"./SecondView.vue?vue&type=style&index=0&id=60a93e6c&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\nirma\\\\Development\\\\virtuallab-oop\\\\exp-10\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","id","_createElementVNode","_hoisted_1","_hoisted_2","onClick","$data","style","_createBlock","_KeepAlive","_resolveDynamicComponent","onInstructionsRead","$options","onTestDriver","_hoisted_3","_ctx","push","_hoisted_58","_createElementBlock","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","display","_hoisted_12","_hoisted_13","spellcheck","maxlength","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_23","_hoisted_29","_hoisted_30","_hoisted_36","_hoisted_37","_hoisted_45","_hoisted_46","components","abstractComponent","arrayListComponent","classCastExceptionComponent","constructorWritingComponent","dateComponent","extendsComponent","functionCallingWithObjectComponent","getterComponent","interfaceComponent","newVariableComponent","nullPointerExceptionComponent","objectCreationComponent","parseExceptionComponent","passingArgumentsToFunctionsComponent","printFunctionComponent","setterComponent","stringCompareComponent","superKeywordComponent","thisComponent","tryCatchComponent","methods","popup","chosenComponent","this","currentComponent","console","log","modal","document","getElementById","span","getElementsByClassName","onclick","window","event","target","correct1","x","innerHTML","backgroundColor","className","setTimeout","replace","incorrect","validate_ten","seventeen","eighteen","nineteen","validate_eleven","twenty","twenty_one","validate_twelve","ttwo","tthree","tfour","validate_thirteen","tfive","tsix","validate_fourteen","tseven","teight","tnine","$emit","data","button_value","button_text","button_text_right","correct","valid","__exports__","OneClerkComponent","OneClassComponent","OneCustomerComponent","OnePersonComponent","OneReservationComponent","OneVehicleComponent","OneRentalSystemComponent","OneInstructionsComponent","TwoTestDriverComponent","componentSelect","testDriverComplete","instructionsReadCallback","value","testDriverCompleteCallback","render"],"sourceRoot":""}